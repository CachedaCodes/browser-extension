{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/whatwg-fetch/dist/fetch.umd.js",
    "src/shared/polyfills/fetch.js"
  ],
  "names": [
    "outer",
    "modules",
    "cache",
    "entry",
    "previousRequire",
    "hypothesisRequire",
    "newRequire",
    "name",
    "jumped",
    "currentRequire",
    "err",
    "Error",
    "code",
    "m",
    "exports",
    "call",
    "x",
    "id",
    "i",
    "length",
    "1",
    "require",
    "module",
    "t",
    "e",
    "define",
    "amd",
    "WHATWGFetch",
    "this",
    "self",
    "r",
    "Symbol",
    "o",
    "Blob",
    "n",
    "s",
    "a",
    "ArrayBuffer",
    "isView",
    "indexOf",
    "Object",
    "prototype",
    "toString",
    "h",
    "String",
    "test",
    "TypeError",
    "toLowerCase",
    "u",
    "f",
    "next",
    "shift",
    "done",
    "value",
    "iterator",
    "d",
    "map",
    "forEach",
    "append",
    "Array",
    "isArray",
    "getOwnPropertyNames",
    "c",
    "bodyUsed",
    "Promise",
    "reject",
    "p",
    "onload",
    "result",
    "onerror",
    "error",
    "y",
    "FileReader",
    "readAsArrayBuffer",
    "l",
    "slice",
    "Uint8Array",
    "byteLength",
    "set",
    "buffer",
    "b",
    "_initBody",
    "_bodyInit",
    "_bodyText",
    "isPrototypeOf",
    "_bodyBlob",
    "FormData",
    "_bodyFormData",
    "URLSearchParams",
    "DataView",
    "_bodyArrayBuffer",
    "headers",
    "get",
    "type",
    "blob",
    "resolve",
    "arrayBuffer",
    "then",
    "text",
    "readAsText",
    "fromCharCode",
    "join",
    "formData",
    "v",
    "json",
    "JSON",
    "parse",
    "delete",
    "has",
    "hasOwnProperty",
    "keys",
    "push",
    "values",
    "entries",
    "w",
    "body",
    "url",
    "credentials",
    "method",
    "mode",
    "signal",
    "toUpperCase",
    "referrer",
    "trim",
    "split",
    "replace",
    "decodeURIComponent",
    "E",
    "status",
    "ok",
    "statusText",
    "clone",
    "A",
    "redirect",
    "RangeError",
    "location",
    "DOMException",
    "message",
    "stack",
    "create",
    "constructor",
    "_",
    "aborted",
    "XMLHttpRequest",
    "abort",
    "getAllResponseHeaders",
    "responseURL",
    "response",
    "responseText",
    "ontimeout",
    "onabort",
    "open",
    "withCredentials",
    "responseType",
    "setRequestHeader",
    "addEventListener",
    "onreadystatechange",
    "readyState",
    "removeEventListener",
    "send",
    "polyfill",
    "fetch",
    "Headers",
    "Request",
    "Response",
    "defineProperty"
  ],
  "mappings": "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",
  "sourcesContent": [
    "\n// modules are defined as an array\n// [ module function, map of requireuires ]\n//\n// map of requireuires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the requireuire for previous bundles\n\n(function() {\n\nfunction outer(modules, cache, entry) {\n    // Save the require from previous bundle to this closure if any\n    var previousRequire = typeof hypothesisRequire == \"function\" && hypothesisRequire;;\n\n    function newRequire(name, jumped){\n        if(!cache[name]) {\n            if(!modules[name]) {\n                // if we cannot find the module within our internal map or\n                // cache jump to the current global require ie. the last bundle\n                // that was added to the page.\n                var currentRequire = typeof hypothesisRequire == \"function\" && hypothesisRequire;;\n                if (!jumped && currentRequire) return currentRequire(name, true);\n\n                // If there are other bundles on this page the require from the\n                // previous one is saved to 'previousRequire'. Repeat this as\n                // many times as there are bundles until the module is found or\n                // we exhaust the require chain.\n                if (previousRequire) return previousRequire(name, true);\n                var err = new Error('Cannot find module \\'' + name + '\\'');\n                err.code = 'MODULE_NOT_FOUND';\n                throw err;\n            }\n            var m = cache[name] = {exports:{}};\n            modules[name][0].call(m.exports, function(x){\n                var id = modules[name][1][x];\n                return newRequire(id ? id : x);\n            },m,m.exports,outer,modules,cache,entry);\n        }\n        return cache[name].exports;\n    }\n    for(var i=0;i<entry.length;i++) newRequire(entry[i]);\n\n    // Override the current require with this new one\n    return newRequire;\n}\n\nreturn outer;\n\n})()\n",
    "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.WHATWGFetch={})}(this,(function(t){\"use strict\";var e=\"URLSearchParams\"in self,r=\"Symbol\"in self&&\"iterator\"in Symbol,o=\"FileReader\"in self&&\"Blob\"in self&&function(){try{return new Blob,!0}catch(t){return!1}}(),n=\"FormData\"in self,i=\"ArrayBuffer\"in self;if(i)var s=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],a=ArrayBuffer.isView||function(t){return t&&s.indexOf(Object.prototype.toString.call(t))>-1};function h(t){if(\"string\"!=typeof t&&(t=String(t)),/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError(\"Invalid character in header field name\");return t.toLowerCase()}function u(t){return\"string\"!=typeof t&&(t=String(t)),t}function f(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return r&&(e[Symbol.iterator]=function(){return e}),e}function d(t){this.map={},t instanceof d?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function c(t){if(t.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));t.bodyUsed=!0}function p(t){return new Promise((function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}}))}function y(t){var e=new FileReader,r=p(e);return e.readAsArrayBuffer(t),r}function l(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(t){var r;this._bodyInit=t,t?\"string\"==typeof t?this._bodyText=t:o&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:n&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:e&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():i&&o&&((r=t)&&DataView.prototype.isPrototypeOf(r))?(this._bodyArrayBuffer=l(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):i&&(ArrayBuffer.prototype.isPrototypeOf(t)||a(t))?this._bodyArrayBuffer=l(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText=\"\",this.headers.get(\"content-type\")||(\"string\"==typeof t?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):e&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},o&&(this.blob=function(){var t=c(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?c(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(y)}),this.text=function(){var t,e,r,o=c(this);if(o)return o;if(this._bodyBlob)return t=this._bodyBlob,e=new FileReader,r=p(e),e.readAsText(t),r;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),o=0;o<e.length;o++)r[o]=String.fromCharCode(e[o]);return r.join(\"\")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},n&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}d.prototype.append=function(t,e){t=h(t),e=u(e);var r=this.map[t];this.map[t]=r?r+\", \"+e:e},d.prototype.delete=function(t){delete this.map[h(t)]},d.prototype.get=function(t){return t=h(t),this.has(t)?this.map[t]:null},d.prototype.has=function(t){return this.map.hasOwnProperty(h(t))},d.prototype.set=function(t,e){this.map[h(t)]=u(e)},d.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},d.prototype.keys=function(){var t=[];return this.forEach((function(e,r){t.push(r)})),f(t)},d.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),f(t)},d.prototype.entries=function(){var t=[];return this.forEach((function(e,r){t.push([r,e])})),f(t)},r&&(d.prototype[Symbol.iterator]=d.prototype.entries);var m=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];function w(t,e){var r,o,n=(e=e||{}).body;if(t instanceof w){if(t.bodyUsed)throw new TypeError(\"Already read\");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new d(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,n||null==t._bodyInit||(n=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||\"same-origin\",!e.headers&&this.headers||(this.headers=new d(e.headers)),this.method=(r=e.method||this.method||\"GET\",o=r.toUpperCase(),m.indexOf(o)>-1?o:r),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,(\"GET\"===this.method||\"HEAD\"===this.method)&&n)throw new TypeError(\"Body not allowed for GET or HEAD requests\");this._initBody(n)}function v(t){var e=new FormData;return t.trim().split(\"&\").forEach((function(t){if(t){var r=t.split(\"=\"),o=r.shift().replace(/\\+/g,\" \"),n=r.join(\"=\").replace(/\\+/g,\" \");e.append(decodeURIComponent(o),decodeURIComponent(n))}})),e}function E(t,e){e||(e={}),this.type=\"default\",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=\"statusText\"in e?e.statusText:\"OK\",this.headers=new d(e.headers),this.url=e.url||\"\",this._initBody(t)}w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},b.call(w.prototype),b.call(E.prototype),E.prototype.clone=function(){return new E(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new d(this.headers),url:this.url})},E.error=function(){var t=new E(null,{status:0,statusText:\"\"});return t.type=\"error\",t};var A=[301,302,303,307,308];E.redirect=function(t,e){if(-1===A.indexOf(e))throw new RangeError(\"Invalid status code\");return new E(null,{status:e,headers:{location:t}})},t.DOMException=self.DOMException;try{new t.DOMException}catch(e){t.DOMException=function(t,e){this.message=t,this.name=e;var r=Error(t);this.stack=r.stack},t.DOMException.prototype=Object.create(Error.prototype),t.DOMException.prototype.constructor=t.DOMException}function _(e,r){return new Promise((function(n,i){var s=new w(e,r);if(s.signal&&s.signal.aborted)return i(new t.DOMException(\"Aborted\",\"AbortError\"));var a=new XMLHttpRequest;function h(){a.abort()}a.onload=function(){var t,e,r={status:a.status,statusText:a.statusText,headers:(t=a.getAllResponseHeaders()||\"\",e=new d,t.replace(/\\r?\\n[\\t ]+/g,\" \").split(/\\r?\\n/).forEach((function(t){var r=t.split(\":\"),o=r.shift().trim();if(o){var n=r.join(\":\").trim();e.append(o,n)}})),e)};r.url=\"responseURL\"in a?a.responseURL:r.headers.get(\"X-Request-URL\");var o=\"response\"in a?a.response:a.responseText;n(new E(o,r))},a.onerror=function(){i(new TypeError(\"Network request failed\"))},a.ontimeout=function(){i(new TypeError(\"Network request failed\"))},a.onabort=function(){i(new t.DOMException(\"Aborted\",\"AbortError\"))},a.open(s.method,s.url,!0),\"include\"===s.credentials?a.withCredentials=!0:\"omit\"===s.credentials&&(a.withCredentials=!1),\"responseType\"in a&&o&&(a.responseType=\"blob\"),s.headers.forEach((function(t,e){a.setRequestHeader(e,t)})),s.signal&&(s.signal.addEventListener(\"abort\",h),a.onreadystatechange=function(){4===a.readyState&&s.signal.removeEventListener(\"abort\",h)}),a.send(void 0===s._bodyInit?null:s._bodyInit)}))}_.polyfill=!0,self.fetch||(self.fetch=_,self.Headers=d,self.Request=w,self.Response=E),t.Headers=d,t.Request=w,t.Response=E,t.fetch=_,Object.defineProperty(t,\"__esModule\",{value:!0})}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "import 'whatwg-fetch';\n"
  ],
  "sourceRoot": ""
}