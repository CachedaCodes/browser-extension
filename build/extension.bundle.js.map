{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/is-equal-shallow/index.js",
    "node_modules/is-primitive/index.js",
    "node_modules/query-string/index.js",
    "node_modules/raven-js/src/configError.js",
    "node_modules/raven-js/src/console.js",
    "node_modules/raven-js/src/raven.js",
    "node_modules/raven-js/src/singleton.js",
    "node_modules/raven-js/src/utils.js",
    "node_modules/raven-js/vendor/TraceKit/tracekit.js",
    "node_modules/raven-js/vendor/json-stringify-safe/stringify.js",
    "node_modules/raven-js/vendor/md5/md5.js",
    "node_modules/strict-uri-encode/index.js",
    "src/background/browser-action.js",
    "src/background/browser-name.js",
    "src/background/detect-content-type.js",
    "src/background/direct-link-query.js",
    "src/background/errors.js",
    "src/background/help-page.js",
    "src/background/hypothesis-chrome-extension.js",
    "src/background/index.js",
    "src/background/install.js",
    "src/background/raven.js",
    "src/background/settings.js",
    "src/background/sidebar-injector.js",
    "src/background/tab-state.js",
    "src/background/tab-store.js",
    "src/background/uri-info.js",
    "src/background/util.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnojrkBCqCwB,a;;AA3CxB;;;;AACA;;;;;;AAEA;AACA,IAAI,SAAS,mBAAS,MAAtB;;AAEA;AACA;AACA,IAAI,QAAQ,EAAZ;AACA,MAAM,OAAO,MAAb,IAAuB;AACrB,MAAI,gCADiB;AAErB,MAAI;AAFiB,CAAvB;AAIA,MAAM,OAAO,QAAb,IAAyB;AACvB,MAAI,kCADmB;AAEvB,MAAI;AAFmB,CAAzB;;AAKA;AACA;AACA,IAAI,cAAc;AAChB,OAAK;AACH,iBAAa,KADV;AAEH,WAAO,SAFJ,CAEe;AAFf,GADW;AAKhB,MAAI;AACF,iBAAa,IADX;AAEF,WAAO,SAFL,CAEgB;AAFhB;AALY,CAAlB;;AAWA;AACA,SAAS,CAAT,CAAW,GAAX,EAAgB;AACd,SAAO,GAAP;AACD;;AAED;;;;;;;AAOe,SAAS,aAAT,CAAuB,mBAAvB,EAA4C;AACzD,MAAI,YAAY,mBAAS,SAAzB;;AAEA;;;;;;AAMA,OAAK,MAAL,GAAc,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACpC,QAAI,aAAa,MAAM,OAAO,QAAb,CAAjB;AACA,QAAI,QAAQ,EAAZ;AACA,QAAI,YAAY,EAAhB;;AAEA,QAAI,MAAM,KAAN,KAAgB,OAAO,MAA3B,EAAmC;AACjC,mBAAa,MAAM,OAAO,MAAb,CAAb;AACA,cAAQ,sBAAR;AACD,KAHD,MAGO,IAAI,MAAM,KAAN,KAAgB,OAAO,QAA3B,EAAqC;AAC1C,cAAQ,wBAAR;AACD,KAFM,MAEA,IAAI,MAAM,KAAN,KAAgB,OAAO,OAA3B,EAAoC;AACzC,cAAQ,2BAAR;AACA,kBAAY,GAAZ;AACD,KAHM,MAGA;AACL,YAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACD;;AAED;AACA,QAAI,MAAM,KAAN,KAAgB,OAAO,OAAvB,IAAkC,MAAM,eAA5C,EAA6D;AAC3D,UAAI,UAAJ;AACA,UAAI,cAAc,MAAM,eAAN,CAAsB,QAAtB,EAAlB;AACA,UAAI,MAAM,eAAN,GAAwB,GAA5B,EAAiC;AAC/B,sBAAc,MAAd;AACD;AACD,UAAI,MAAM,eAAN,KAA0B,CAA9B,EAAiC;AAC/B,qBAAa,EAAE,mCAAF,CAAb;AACD,OAFD,MAEO;AACL,qBAAa,EACX,eAAe,WAAf,GAA6B,2BADlB,CAAb;AAGD;AACD,cAAQ,UAAR;AACA,kBAAY,WAAZ;AACD;;AAED;AACA,QAAI,aAAa,YAAY,SAAZ,CAAjB;AACA,QAAI,UAAJ,EAAgB;AACd,0BAAoB,uBAApB,CAA4C;AAC1C,eAAO,KADmC;AAE1C,eAAO,WAAW;AAFwB,OAA5C;AAIA,UAAI,CAAC,SAAL,EAAgB;AACd,oBAAY,WAAW,WAAvB;AACD;AACF;;AAED,wBAAoB,YAApB,CAAiC,EAAE,OAAO,KAAT,EAAgB,MAAM,SAAtB,EAAjC;AACA,wBAAoB,OAApB,CAA4B,EAAE,OAAO,KAAT,EAAgB,MAAM,UAAtB,EAA5B;AACA,wBAAoB,QAApB,CAA6B,EAAE,OAAO,KAAT,EAAgB,OAAO,KAAvB,EAA7B;AACD,GAlDD;AAmDD;;AAED,cAAc,KAAd,GAAsB,KAAtB;;;;;;;;kBCpGwB,W;AALxB;;;;;AAKe,SAAS,WAAT,GAAuB;AACpC,MAAI,OAAO,OAAX,EAAoB;AAClB,WAAO,SAAP;AACD,GAFD,MAEO;AACL,WAAO,QAAP;AACD;AACF;;;;;;;;kBCCuB,iB;AAZxB;;;;;;;;;;;;AAYe,SAAS,iBAAT,CAA2B,SAA3B,EAAsC;AACnD,cAAY,aAAa,QAAzB;;AAEA,WAAS,qBAAT,GAAiC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,UAAU,aAAV,CAAwB,+BAAxB,CAAJ,EAA8D;AAC5D,aAAO,EAAE,MAAM,KAAR,EAAP;AACD;AACD,WAAO,IAAP;AACD;;AAED,WAAS,sBAAT,GAAkC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,UAAU,OAAV,CAAkB,OAAlB,CAA0B,mBAA1B,MAAmD,CAAvD,EAA0D;AACxD,aAAO,EAAE,MAAM,KAAR,EAAP;AACD;AACD,WAAO,IAAP;AACD;;AAED,MAAI,YAAY,CAAC,qBAAD,EAAwB,sBAAxB,CAAhB;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,QAAI,WAAW,UAAU,CAAV,GAAf;AACA,QAAI,QAAJ,EAAc;AACZ,aAAO,QAAP;AACD;AACF;;AAED,SAAO,EAAE,MAAM,MAAR,EAAP;AACD;;;;;;;;kBChCuB,e;AAxBxB;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYe,SAAS,eAAT,CAAyB,GAAzB,EAA8B;AAC3C;AACA;AACA,MAAI,UAAU,IAAI,KAAJ,CAAU,gCAAV,CAAd;AACA,MAAI,OAAJ,EAAa;AACX,WAAO,EAAE,aAAa,QAAQ,CAAR,CAAf,EAAP;AACD;;AAED,MAAI,aAAa,IAAI,KAAJ,CAAU,0BAAV,CAAjB;AACA,MAAI,UAAJ,EAAgB;AACd,QAAI,QAAQ,mBAAmB,WAAW,CAAX,CAAnB,CAAZ;AACA,WAAO,EAAE,KAAF,EAAP;AACD;;AAED;AACA;AACA;AACA,MAAI,aAAa,IAAI,KAAJ,CAAU,qCAAV,CAAjB;AACA,MAAI,UAAJ,EAAgB;AACd,WAAO,EAAE,OAAO,WAAW,CAAX,CAAT,EAAP;AACD;;AAED,SAAO,IAAP;AACD;;;;;;;;QC7Ce,c,GAAA,c;QAOA,c,GAAA,c;QAOA,iB,GAAA,iB;QAOA,uB,GAAA,uB;QAOA,gB,GAAA,gB;QAOA,oB,GAAA,oB;QA6BA,0B,GAAA,0B;QAyBA,M,GAAA,M;;AA3FhB;;IAAY,K;;;;AAEL,SAAS,cAAT,CAAwB,OAAxB,EAAiC;AACtC,QAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACA,OAAK,OAAL,GAAe,OAAf;AACD;;AAED,eAAe,SAAf,GAA2B,OAAO,MAAP,CAAc,MAAM,SAApB,CAA3B;;AAEO,SAAS,cAAT,CAAwB,OAAxB,EAAiC;AACtC,QAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACA,OAAK,OAAL,GAAe,OAAf;AACD;;AAED,eAAe,SAAf,GAA2B,OAAO,MAAP,CAAc,eAAe,SAA7B,CAA3B;;AAEO,SAAS,iBAAT,CAA2B,OAA3B,EAAoC;AACzC,QAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACA,OAAK,OAAL,GAAe,OAAf;AACD;;AAED,kBAAkB,SAAlB,GAA8B,OAAO,MAAP,CAAc,eAAe,SAA7B,CAA9B;;AAEO,SAAS,uBAAT,CAAiC,OAAjC,EAA0C;AAC/C,QAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACA,OAAK,OAAL,GAAe,OAAf;AACD;;AAED,wBAAwB,SAAxB,GAAoC,OAAO,MAAP,CAAc,eAAe,SAA7B,CAApC;;AAEO,SAAS,gBAAT,CAA0B,OAA1B,EAAmC;AACxC,QAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACA,OAAK,OAAL,GAAe,OAAf;AACD;;AAED,iBAAiB,SAAjB,GAA6B,OAAO,MAAP,CAAc,eAAe,SAA7B,CAA7B;;AAEO,SAAS,oBAAT,CAA8B,OAA9B,EAAuC;AAC5C,QAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACA,OAAK,OAAL,GAAe,OAAf;AACD;;AAED,qBAAqB,SAArB,GAAiC,OAAO,MAAP,CAAc,eAAe,SAA7B,CAAjC;;AAEA;;;AAGA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,eAAe,cAAtB;AACD;;AAED,IAAI,iBAAiB;AACnB;AACA,oBAFmB,EAGnB,kBAHmB;AAInB;AACA,6BALmB,EAMnB,2CANmB,CAArB;;AASA;;;;;;AAMO,SAAS,0BAAT,CAAoC,GAApC,EAAyC;AAC9C,MACE,eAAe,IAAf,CAAoB,UAAU,OAAV,EAAmB;AACrC,WAAO,IAAI,OAAJ,CAAY,KAAZ,CAAkB,OAAlB,CAAP;AACD,GAFD,CADF,EAIE;AACA,WAAO,IAAP;AACD;AACD,MAAI,aAAa,GAAb,CAAJ,EAAuB;AACrB,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD;;AAED;;;;;;;;;;;AAWO,SAAS,MAAT,CAAgB,KAAhB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC;AAC3C,UAAQ,KAAR,CAAc,IAAd,EAAoB,KAApB;AACA,MAAI,CAAC,aAAa,KAAb,CAAL,EAA0B;AACxB,UAAM,MAAN,CAAa,KAAb,EAAoB,IAApB,EAA0B,OAA1B;AACD;AACF;;;;;;;;kBCrFuB,Q;;AAXxB;;;;AACA;;IAAY,M;;;;;;AAEZ;;;;;;;;AAQe,SAAS,QAAT,CAAkB,UAAlB,EAA8B,YAA9B,EAA4C,YAA5C,EAA0D;AACvE,iBAAe,gBAAgB,qBAA/B;;AAEA;;;;;;;AAOA,OAAK,gBAAL,GAAwB,UAAU,GAAV,EAAe,KAAf,EAAsB;AAC5C,QAAI,iBAAiB,OAAO,cAA5B,EAA4C;AAC1C,aAAO,KAAK,qBAAL,CAA2B,GAA3B,CAAP;AACD,KAFD,MAEO,IAAI,iBAAiB,OAAO,iBAA5B,EAA+C;AACpD,aAAO,KAAK,wBAAL,CAA8B,GAA9B,CAAP;AACD,KAFM,MAEA,IAAI,iBAAiB,OAAO,uBAA5B,EAAqD;AAC1D,aAAO,KAAK,0BAAL,CAAgC,GAAhC,CAAP;AACD,KAFM,MAEA,IAAI,iBAAiB,OAAO,gBAA5B,EAA8C;AACnD,aAAO,KAAK,mBAAL,CAAyB,GAAzB,CAAP;AACD,KAFM,MAEA;AACL,aAAO,KAAK,kBAAL,CAAwB,GAAxB,EAA6B,KAA7B,CAAP;AACD;AACF,GAZD;;AAcA,OAAK,qBAAL,GAA6B,aAAa,IAAb,CAAkB,IAAlB,EAAwB,YAAxB,CAA7B;AACA,OAAK,wBAAL,GAAgC,aAAa,IAAb,CAAkB,IAAlB,EAAwB,gBAAxB,CAAhC;AACA,OAAK,0BAAL,GAAkC,aAAa,IAAb,CAChC,IADgC,EAEhC,qBAFgC,CAAlC;AAIA,OAAK,mBAAL,GAA2B,aAAa,IAAb,CAAkB,IAAlB,EAAwB,cAAxB,CAA3B;AACA,OAAK,kBAAL,GAA0B,aAAa,IAAb,CAAkB,IAAlB,EAAwB,aAAxB,CAA1B;;AAEA;;;;;;;AAOA,WAAS,YAAT,CAAsB,WAAtB,EAAmC,GAAnC,EAAwC,KAAxC,EAA+C;AAC7C,QAAI,SAAS,EAAb;AACA,QAAI,KAAJ,EAAW;AACT,eAAS,cAAc,mBAAmB,MAAM,OAAzB,CAAvB;AACD;;AAED,QAAI,UAAU;AACZ,aAAO,IAAI,KAAJ,GAAY,CADP;AAEZ,WAAK,aAAa,qBAAqB,MAArB,GAA8B,GAA9B,GAAoC,WAAjD;AAFO,KAAd;;AAKA;AACA;AACA,QAAI,mBAAmB,SAAvB,EAAkC;AAChC,cAAQ,WAAR,GAAsB,IAAI,EAA1B;AACD;;AAED,eAAW,MAAX,CAAkB,OAAlB;AACD;AACF;;;;;;;;kBC/BuB,yB;;AAvCxB;;;;AACA;;;;AACA;;IAAY,M;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAI,qBAAqB,SAAzB;AACA,IAAI,sBAAsB,UAA1B;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,SAAS,yBAAT,CAAmC,YAAnC,EAAiD;AAC9D,MAAI,aAAa,aAAa,UAA9B;AACA,MAAI,kBAAkB,aAAa,eAAnC;AACA,MAAI,gBAAgB,aAAa,aAAjC;AACA,MAAI,sBAAsB,aAAa,mBAAvC;AACA,MAAI,OAAO,IAAI,kBAAJ,CAAa,UAAb,EAAyB,aAAa,YAAtC,CAAX;AACA,MAAI,QAAQ,IAAI,kBAAJ,CAAa,YAAb,CAAZ;AACA,MAAI,QAAQ,IAAI,kBAAJ,CAAa,MAAM,GAAN,EAAb,EAA0B,gBAA1B,CAAZ;AACA,MAAI,gBAAgB,IAAI,uBAAJ,CAAkB,mBAAlB,CAApB;AACA,MAAI,UAAU,IAAI,yBAAJ,CAAoB,UAApB,EAAgC;AAC5C,kBAAc,aAAa,YADiB;AAE5C,+BAA2B,aAAa;AAFI,GAAhC,CAAd;;AAKA;;AAEA;;;AAGA,OAAK,MAAL,GAAc,YAAY;AACxB,wBAAoB,SAApB,CAA8B,WAA9B,CAA0C,sBAA1C;AACA,eAAW,SAAX,CAAqB,WAArB,CAAiC,YAAjC;;AAEA;AACA;AACA,eAAW,SAAX,CAAqB,WAArB,CAAiC,YAAjC;;AAEA;AACA;AACA;AACA;AACA,eAAW,UAAX,CAAsB,WAAtB,CAAkC,aAAlC;;AAEA,eAAW,SAAX,CAAqB,WAArB,CAAiC,YAAjC;AACD,GAfD;;AAiBA;;;AAGA,OAAK,OAAL,GAAe,YAAY;AACzB;AACD,GAFD;;AAIA;AACA,OAAK,QAAL,GAAgB,UAAU,aAAV,EAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,cAAc,WAAd,KAA8B,OAAlC,EAA2C;AACzC;AACD;;AAED,eAAW,MAAX,CAAkB,EAAE,KAAK,mBAAS,UAAT,GAAsB,SAA7B,EAAlB,EAA4D,UAAU,GAAV,EAAe;AACzE,YAAM,WAAN,CAAkB,IAAI,EAAtB;AACD,KAFD;AAGD,GAnBD;;AAqBA,WAAS,oBAAT,GAAgC;AAC9B,UAAM,MAAN;AACA,UAAM,IAAN,CAAW,MAAM,GAAN,EAAX;AACA,eAAW,KAAX,CAAiB,EAAjB,EAAqB,UAAU,IAAV,EAAgB;AACnC,WAAK,OAAL,CAAa,UAAU,GAAV,EAAe;AAC1B,yBAAiB,IAAI,EAArB,EAAyB,MAAM,QAAN,CAAe,IAAI,EAAnB,CAAzB;AACD,OAFD;AAGD,KAJD;AAKD;;AAED,WAAS,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC,EAA0C;AACxC,QAAI,OAAJ,EAAa;AACX,oBAAc,MAAd,CAAqB,KAArB,EAA4B,OAA5B;AACA,iBAAW,GAAX,CAAe,KAAf,EAAsB,iBAAtB;;AAEA,UAAI,CAAC,MAAM,YAAN,CAAmB,KAAnB,CAAL,EAAgC;AAC9B,cAAM,GAAN,CAAU,KAAV,EAAiB,OAAjB;AACD;AACF,KAPD,MAOO;AACL,YAAM,KAAN,CAAY,KAAZ;AACD;AACF;;AAED;AACA,OAAK,iBAAL,GAAyB,gBAAzB;;AAEA,WAAS,sBAAT,CAAgC,GAAhC,EAAqC;AACnC,QAAI,WAAW,MAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB,KAAtC;AACA,QAAI,QAAJ,EAAc;AACZ,WAAK,gBAAL,CAAsB,GAAtB,EAA2B,QAA3B;AACD,KAFD,MAEO,IAAI,MAAM,WAAN,CAAkB,IAAI,EAAtB,CAAJ,EAA+B;AACpC,YAAM,aAAN,CAAoB,IAAI,EAAxB;AACD,KAFM,MAEA;AACL,YAAM,WAAN,CAAkB,IAAI,EAAtB;AACD;AACF;;AAED;;;;AAIA,WAAS,0BAAT,CAAoC,KAApC,EAA2C;AACzC,QAAI,cAAc,MAAM,QAAN,CAAe,KAAf,EAAsB,KAAxC;AACA,QAAI,gBAAgB,mBAAS,MAAT,CAAgB,OAApC,EAA6C;AAC3C;AACA;AACA,oBAAc,mBAAS,MAAT,CAAgB,MAA9B;AACD;AACD,WAAO,WAAP;AACD;;AAED,WAAS,aAAT,CAAuB,KAAvB,EAA8B,GAA9B,EAAmC;AACjC,UAAM,QAAN,CAAe,KAAf,EAAsB;AACpB,aAAO,2BAA2B,KAA3B,CADa;AAEpB,aAAO,KAFa;AAGpB,uBAAiB,CAHG;AAIpB,iCAA2B;AAJP,KAAtB;AAMA,mCAA+B,KAA/B,EAAsC,GAAtC;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAS,YAAT,CAAsB,KAAtB,EAA6B,UAA7B,EAAyC,GAAzC,EAA8C;AAC5C,QAAI,WAAW,MAAX,KAAsB,kBAA1B,EAA8C;AAC5C,oBAAc,KAAd,EAAqB,IAAI,GAAzB;AACA,UAAI,QAAQ,+BAAgB,IAAI,GAApB,CAAZ;AACA,UAAI,KAAJ,EAAW;AACT,cAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB,EAAE,iBAAiB,KAAnB,EAAvB;AACD;AACF,KAND,MAMO,IAAI,WAAW,MAAX,KAAsB,mBAA1B,EAA+C;AACpD,UAAI,WAAW,MAAM,QAAN,CAAe,KAAf,CAAf;AACA,UAAI,iBAAiB,SAAS,KAA9B;AACA,UAAI,SAAS,eAAb,EAA8B;AAC5B,yBAAiB,mBAAS,MAAT,CAAgB,MAAjC;AACD;AACD,YAAM,QAAN,CAAe,KAAf,EAAsB;AACpB,eAAO,IADa;AAEpB,eAAO;AAFa,OAAtB;AAID;AACF;;AAED,WAAS,aAAT,CAAuB,UAAvB,EAAmC,YAAnC,EAAiD;AAC/C,UAAM,QAAN,CAAe,UAAf,EAA2B;AACzB,aAAO,2BAA2B,YAA3B,CADkB;AAEzB,aAAO;AAFkB,KAA3B;AAIA,UAAM,QAAN,CAAe,YAAf;;AAEA,eAAW,GAAX,CAAe,UAAf,EAA2B,UAAU,GAAV,EAAe;AACxC,qCAA+B,UAA/B,EAA2C,IAAI,GAA/C;AACD,KAFD;AAGD;;AAED,WAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB;AACA,UAAM,QAAN,CAAe,IAAI,EAAnB;AACD;;AAED,WAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,UAAM,QAAN,CAAe,KAAf;AACD;;AAED;AACA;AACA,WAAS,iBAAT,CAA2B,GAA3B,EAAgC;AAC9B;AACA,QAAI,CAAC,MAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB,KAA5B,EAAmC;AACjC,aAAO,QAAQ,OAAR,EAAP;AACD;;AAED,QAAI,cAAc,MAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB,yBAAzC;AACA,QAAI,MAAM,WAAN,CAAkB,IAAI,EAAtB,KAA6B,CAAC,WAAlC,EAA+C;AAC7C;AACA;AACA,YAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB;AACrB,mCAA2B;AADN,OAAvB;;AAIA,UAAI,EAAE,eAAF,KAAsB,MAAM,QAAN,CAAe,IAAI,EAAnB,CAA1B;;AAEA,UAAI,SAAS;AACX;AACA;AACA;AACA;AACA,mBAAW,gBAAgB,MAAhB,CAAuB,UAAvB,CALA;AAMX,uBAAe,gBAAgB,MAAhB,CAAuB,kBAAvB;AANJ,OAAb;;AASA;AACA;AACA;AACA;AACA;AACA,aAAO,MAAP,CAAc,MAAd,EAAsB,eAAtB;;AAEA,aAAO,QACJ,aADI,CACU,GADV,EACe,MADf,EAEJ,IAFI,CAEC,YAAY;AAChB;AACA,cAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB,EAAE,iBAAiB,SAAnB,EAAvB;AACD,OALI,EAMJ,KANI,CAME,UAAU,GAAV,EAAe;AACpB,YAAI,eAAe,OAAO,oBAA1B,EAAgD;AAC9C,gBAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB;AACrB,mBAAO,mBAAS,MAAT,CAAgB,QADF;AAErB,uCAA2B;AAFN,WAAvB;AAIA;AACD;AACD,YAAI,CAAC,OAAO,0BAAP,CAAkC,GAAlC,CAAL,EAA6C;AAC3C,iBAAO,MAAP,CAAc,GAAd,EAAmB,8BAAnB,EAAmD;AACjD,iBAAK,IAAI;AADwC,WAAnD;AAGD;AACD,cAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB,GAAvB;AACD,OApBI,CAAP;AAqBD,KA9CD,MA8CO,IAAI,MAAM,aAAN,CAAoB,IAAI,EAAxB,KAA+B,WAAnC,EAAgD;AACrD,aAAO,QAAQ,aAAR,CAAsB,GAAtB,EAA2B,IAA3B,CAAgC,YAAY;AACjD,cAAM,QAAN,CAAe,IAAI,EAAnB,EAAuB;AACrB,qCAA2B;AADN,SAAvB;AAGD,OAJM,CAAP;AAKD,KANM,MAMA;AACL,aAAO,QAAQ,OAAR,EAAP;AACD;AACF;;AAED,WAAS,8BAAT,CAAwC,KAAxC,EAA+C,GAA/C,EAAoD;AAClD,QAAI,CAAC,cAAc,IAAnB,EAAyB;AACvB;AACA,YAAM,qBAAN,CAA4B,KAA5B,EAAmC,GAAnC;AACA;AACD;;AAED,kBAAc,IAAd,CAAmB,GAAnB,CACE;AACE,aAAO;AADT,KADF,EAIE,UAAU,KAAV,EAAiB;AACf,UAAI,MAAM,KAAV,EAAiB;AACf,cAAM,qBAAN,CAA4B,KAA5B,EAAmC,GAAnC;AACD;AACF,KARH;AAUD;AACF;;;;;ACzSD;;IAAY,K;;AAMZ;;AACA;;;;AALA,IAAI,OAAO,gBAAP,CAAwB,KAA5B,EAAmC;AACjC,QAAM,IAAN,CAAW,OAAO,gBAAP,CAAwB,KAAnC;AACD;;;;;;;;QCAe,I,GAAA,I;;AAJhB;;;;;;AAEA,IAAI,gBAAJ;;AAEO,SAAS,IAAT,GAAgB;AACrB,qBAAmB,IAAI,mCAAJ,CAA8B;AAC/C,qBAAiB,OAAO,SADuB;AAE/C,gBAAY,OAAO,IAF4B;AAG/C,yBAAqB,OAAO,aAHmB;AAI/C,mBAAe,OAAO,OAJyB;AAK/C,kBAAc,UAAU,IAAV,EAAgB;AAC5B,aAAO,OAAO,SAAP,CAAiB,MAAjB,CAAwB,IAAxB,CAAP;AACD,KAP8C;AAQ/C,+BAA2B,UAAU,EAAV,EAAc;AACvC,aAAO,OAAO,SAAP,CAAiB,yBAAjB,CAA2C,EAA3C,CAAP;AACD;AAV8C,GAA9B,CAAnB;;AAaA,mBAAiB,MAAjB,CAAwB,MAAxB;AACD;;AAED,IAAI,CAAC,OAAO,YAAZ,EAA0B;AACxB;AACD;;AAED,IAAI,OAAO,OAAP,CAAe,WAAnB,EAAgC;AAC9B,SAAO,OAAP,CAAe,WAAf,CAA2B,WAA3B,CAAuC,WAAvC;AACD;;AAED;AACA;AACA,IAAI,OAAO,OAAP,CAAe,iBAAnB,EAAsC;AACpC,SAAO,OAAP,CAAe,iBAAf,CAAiC,WAAjC,CAA6C,UAC3C,OAD2C,EAE3C,MAF2C,EAG3C,YAH2C,EAI3C;AACA,QAAI,QAAQ,IAAR,KAAiB,MAArB,EAA6B;AAC3B,mBAAa,EAAE,MAAM,MAAR,EAAb;AACD;AACF,GARD;AASD;;AAED,IAAI,OAAO,OAAP,CAAe,kBAAnB,EAAuC;AACrC,SAAO,OAAP,CAAe,kBAAf,CAAkC,YAAY;AAC5C,WAAO,OAAP,CAAe,iBAAf,CAAiC,WAAjC,CAA6C,iBAA7C;AACD,GAFD;AAGD;;AAED,SAAS,WAAT,CAAqB,cAArB,EAAqC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI,eAAe,MAAf,KAA0B,SAA9B,EAAyC;AACvC,WAAO,UAAP,CAAkB,OAAlB,CAA0B,iBAAiB,QAA3C;AACD;;AAED,mBAAiB,OAAjB;AACD;;AAED,SAAS,iBAAT,GAA6B;AAC3B,SAAO,OAAP,CAAe,MAAf;AACD;;;;;;;;QCTe,I,GAAA,I;QAkBA,M,GAAA,M;;AAtEhB;;;;;;AAEA;;;;;;;AAOA,SAAS,2BAAT,CAAqC,GAArC,EAA0C;AACxC,MAAI,CAAC,GAAL,EAAU;AACR,WAAO,GAAP;AACD;;AAED,MAAI,IAAI,KAAJ,CAAU,SAAV,CAAJ,EAA0B;AACxB,WAAO,GAAP;AACD;;AAED;AACA;AACA,SAAO,IAAI,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwB,KAAxB,CAA8B,GAA9B,EAAmC,KAAnC,CAAyC,CAAC,CAA1C,EAA6C,CAA7C,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;AA/BA;;;;;;;;AA+CA,SAAS,mBAAT,CAA6B,IAA7B,EAAmC;AACjC,MAAI;AACF,QAAI,SAAS,KAAK,SAAL,CAAe,MAAf,CAAsB,CAAtB,EAAyB,UAAzB,CAAoC,MAAjD;AACA,WAAO,OAAP,CAAe,UAAU,KAAV,EAAiB;AAC9B,YAAM,QAAN,GAAiB,4BAA4B,MAAM,QAAlC,CAAjB;AACD,KAFD;AAGA,SAAK,OAAL,GAAe,OAAO,CAAP,EAAU,QAAzB;AACD,GAND,CAME,OAAO,GAAP,EAAY;AACZ,YAAQ,IAAR,CAAa,uCAAb,EAAsD,GAAtD,EAA2D,IAA3D;AACD;AACD,SAAO,IAAP;AACD;;AAEM,SAAS,IAAT,CAAc,MAAd,EAAsB;AAC3B,oBAAM,MAAN,CAAa,OAAO,GAApB,EAAyB;AACvB,aAAS,OAAO,OADO;AAEvB,kBAAc;AAFS,GAAzB,EAGG,OAHH;AAIA;AACD;;AAED;;;;;;;;;;AAUO,SAAS,MAAT,CAAgB,KAAhB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC;AAC3C,MAAI,EAAE,iBAAiB,KAAnB,CAAJ,EAA+B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,MAAM,OAAvC,EAAgD;AAC9C,cAAQ,MAAM,OAAd;AACD;AACF;;AAED,MAAI,QAAQ,OAAO,MAAP,CAAc,EAAE,MAAM,IAAR,EAAd,EAA8B,OAA9B,CAAZ;AACA,oBAAM,gBAAN,CAAuB,KAAvB,EAA8B,EAAE,OAAO,KAAT,EAA9B;AACD;;AAED;;;;;;;;;;;;;;AAcA,SAAS,mCAAT,GAA+C;AAC7C,SAAO,gBAAP,CAAwB,oBAAxB,EAA8C,UAAU,KAAV,EAAiB;AAC7D,QAAI,MAAM,MAAV,EAAkB;AAChB,aAAO,MAAM,MAAb,EAAqB,6BAArB;AACD;AACF,GAJD;AAKD;;;;;;;;ACpHD;;;;;AAKA,SAAS,iBAAT,CAA2B,QAA3B,EAAqC;AACnC;AACA,MAAI,SAAS,MAAT,CAAgB,MAAhB,CAAuB,SAAS,MAAT,CAAgB,MAAhB,GAAyB,CAAhD,MAAuD,GAA3D,EAAgE;AAC9D,aAAS,MAAT,GAAkB,SAAS,MAAT,CAAgB,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAlB;AACD;AACD,SAAO,QAAP;AACD;;AAED;;;kBAGe,kBAAkB,OAAO,gBAAzB,C;;;;;;;;kBC8CS,e;;AA9DxB;;IAAY,W;;AAEZ;;;;AACA;;IAAY,M;;AACZ;;IAAY,I;;;;;;AAEZ,IAAI,oBAAoB,MAAxB;AACA,IAAI,mBAAmB,KAAvB;;AAEA,SAAS,YAAT,CAAsB,EAAtB,EAA0B;AACxB,SAAO,MAAM,GAAG,QAAH,EAAN,GAAsB,KAA7B;AACD;;AAED;;;;;;AAMA,SAAS,kBAAT,CAA4B,IAA5B,EAAkC,OAAlC,EAA2C;AACzC,MAAI,YAAY,SAAS,aAAT,CAAuB,QAAvB,CAAhB;AACA,YAAU,SAAV,GAAsB,IAAtB;AACA,YAAU,WAAV,GAAwB,OAAxB;AACA,YAAU,IAAV,GAAiB,kBAAjB;AACA,WAAS,IAAT,CAAc,WAAd,CAA0B,SAA1B;AACD;;AAED;;;;;;;;;;;AAWA,SAAS,0BAAT,CAAoC,MAApC,EAA4C;AAC1C,MAAI,MAAM,OAAN,CAAc,MAAd,KAAyB,OAAO,MAAP,GAAgB,CAA7C,EAAgD;AAC9C,WAAO,OAAO,CAAP,CAAP;AACD,GAFD,MAEO,IAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AACrC;AACA;AACA,WAAO,MAAP;AACD,GAJM,MAIA;AACL,WAAO,IAAP;AACD;AACF;;AAED;;;;;;;;;;;;AAYe,SAAS,eAAT,CAAyB,UAAzB,EAAqC,YAArC,EAAmD;AAChE,iBAAe,gBAAgB,EAA/B;;AAEA,MAAI,4BAA4B,aAAa,yBAA7C;AACA,MAAI,eAAe,aAAa,YAAhC;;AAEA,MAAI,kBAAkB,KAAK,SAAL,CAAe,WAAW,aAA1B,CAAtB;;AAEA,MAAI,mBAAmB,aAAa,wBAAb,CAAvB;;AAEA,MAAI,OAAO,YAAP,KAAwB,UAA5B,EAAwC;AACtC,UAAM,IAAI,SAAJ,CAAc,iCAAd,CAAN;AACD;;AAED,MAAI,OAAO,yBAAP,KAAqC,UAAzC,EAAqD;AACnD,UAAM,IAAI,SAAJ,CAAc,8CAAd,CAAN;AACD;;AAED;;;;;;;;;;;AAWA,OAAK,aAAL,GAAqB,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC1C,aAAS,UAAU,EAAnB;AACA,QAAI,UAAU,IAAI,GAAd,CAAJ,EAAwB;AACtB,aAAO,wBAAwB,GAAxB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,yBAAyB,GAAzB,EAA8B,MAA9B,CAAP;AACD;AACF,GAPD;;AASA;;;;;;;AAOA,OAAK,aAAL,GAAqB,UAAU,GAAV,EAAe;AAClC,QAAI,eAAe,IAAI,GAAnB,CAAJ,EAA6B;AAC3B,aAAO,cAAc,GAAd,CAAP;AACD,KAFD,MAEO;AACL,aAAO,eAAe,GAAf,CAAP;AACD;AACF,GAND;;AAQA,WAAS,eAAT,CAAyB,GAAzB,EAA8B;AAC5B;AACA;AACA;AACA,QAAI,YAAY,IAAI,GAAJ,CAAQ,GAAR,CAAhB;AACA,QAAI,OAAO,UAAU,IAArB;AACA,cAAU,IAAV,GAAiB,EAAjB;AACA,QAAI,aAAa,mBAAmB,UAAU,IAA7B,CAAjB;AACA,WAAO,mBAAmB,QAAnB,GAA8B,UAA9B,GAA2C,IAAlD;AACD;;AAED;AACA;AACA,WAAS,eAAT,CAAyB,GAAzB,EAA8B;AAC5B,QAAI,SAAJ;AACA,QAAI,eAAe,GAAf,CAAJ,EAAyB;AACvB,kBAAY,QAAQ,OAAR,CAAgB,IAAhB,CAAZ;AACD,KAFD,MAEO,IAAI,UAAU,GAAV,CAAJ,EAAoB;AACzB,kBAAY,KAAK,SAAL,CAAe,yBAAf,GAAZ;AACD,KAFM,MAEA;AACL,kBAAY,QAAQ,OAAR,CAAgB,KAAhB,CAAZ;AACD;AACD,WAAO,SAAP;AACD;;AAED;;;;;;AAMA,WAAS,uBAAT,CAAiC,GAAjC,EAAsC;AACpC,QAAI,IAAI,OAAJ,CAAY,MAAZ,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,aAAO,gBAAP;AACD,KAFD,MAEO;AACL,aAAO,iBAAP;AACD;AACF;;AAED,WAAS,oBAAT,CAA8B,GAA9B,EAAmC;AACjC,QAAI,eAAe,IAAI,GAAnB,CAAJ,EAA6B;AAC3B,aAAO,QAAQ,OAAR,CAAgB,gBAAhB,CAAP;AACD;;AAED,WAAO,gBAAgB,IAAI,GAApB,EAAyB,IAAzB,CAA8B,UAAU,SAAV,EAAqB;AACxD,UAAI,SAAJ,EAAe;AACb,eAAO,gBAAgB,IAAI,EAApB,EAAwB;AAC7B,gBAAM,aAAa,2BAAb;AADuB,SAAxB,EAEJ,IAFI,CAEC,UAAU,YAAV,EAAwB;AAC9B,cAAI,SAAS,2BAA2B,YAA3B,CAAb;AACA,cAAI,MAAJ,EAAY;AACV,mBAAO,OAAO,IAAd;AACD,WAFD,MAEO;AACL;AACA;AACA;AACA;AACA;AACA,mBAAO,wBAAwB,IAAI,GAA5B,CAAP;AACD;AACF,SAdM,CAAP;AAeD,OAhBD,MAgBO;AACL;AACA;AACA,eAAO,QAAQ,OAAR,CAAgB,wBAAwB,IAAI,GAA5B,CAAhB,CAAP;AACD;AACF,KAtBM,CAAP;AAuBD;;AAED;;;;AAIA,WAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,WAAO,IAAI,OAAJ,CAAY,gBAAZ,MAAkC,CAAzC;AACD;;AAED,WAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB,WAAO,IAAI,OAAJ,CAAY,OAAZ,MAAyB,CAAhC;AACD;;AAED,WAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B;AACA;AACA,QAAI,YAAY,IAAI,GAAJ,CAAQ,GAAR,CAAhB;AACA,QAAI,sBAAsB,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAA1B;AACA,WAAO,oBAAoB,IAApB,CAAyB,UAAU,QAAV,EAAoB;AAClD,aAAO,UAAU,QAAV,KAAuB,QAA9B;AACD,KAFM,CAAP;AAGD;;AAED,WAAS,uBAAT,CAAiC,GAAjC,EAAsC;AACpC,WAAO,qBAAqB,GAArB,EAA0B,IAA1B,CAA+B,UAAU,IAAV,EAAgB;AACpD,UAAI,SAAS,gBAAb,EAA+B;AAC7B,eAAO,mBAAmB,GAAnB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,QAAQ,MAAR,CACL,IAAI,OAAO,cAAX,CAA0B,uCAA1B,CADK,CAAP;AAGD;AACF,KARM,CAAP;AASD;;AAED,WAAS,wBAAT,CAAkC,GAAlC,EAAuC,MAAvC,EAA+C;AAC7C,QAAI,eAAe,IAAI,GAAnB,CAAJ,EAA6B;AAC3B,aAAO,QAAQ,OAAR,EAAP;AACD;;AAED,QAAI,CAAC,eAAe,IAAI,GAAnB,CAAL,EAA8B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,WAAW,IAAI,GAAJ,CAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAf;AACA,aAAO,QAAQ,MAAR,CACL,IAAI,OAAO,uBAAX,CACE,iCAAiC,QAAjC,GAA4C,QAD9C,CADK,CAAP;AAKD;;AAED,WAAO,qBAAqB,GAArB,EAA0B,IAA1B,CAA+B,UAAU,IAAV,EAAgB;AACpD,UAAI,SAAS,gBAAb,EAA+B;AAC7B,eAAO,cAAc,GAAd,CAAP;AACD,OAFD,MAEO;AACL,eAAO,aAAa,IAAI,EAAjB,EAAqB,MAArB,EACJ,IADI,CACC,YAAY;AAChB,iBAAO,eAAe,GAAf,CAAP;AACD,SAHI,EAIJ,IAJI,CAIC,UAAU,OAAV,EAAmB;AACvB,cAAI,SAAS,2BAA2B,OAA3B,CAAb;AACA,cACE,UACA,OAAO,OAAO,YAAd,KAA+B,QAD/B,IAEA,OAAO,YAAP,CAAoB,OAApB,CAA4B,aAAa,GAAb,CAA5B,MAAmD,CAAC,CAHtD,EAIE;AACA,kBAAM,IAAI,OAAO,oBAAX,CACJ,+CADI,CAAN;AAGD;AACF,SAfI,CAAP;AAgBD;AACF,KArBM,CAAP;AAsBD;;AAED,WAAS,aAAT,CAAuB,GAAvB,EAA4B;AAC1B,QAAI,eAAe,IAAI,GAAnB,CAAJ,EAA6B;AAC3B,aAAO,QAAQ,OAAR,EAAP;AACD;AACD,QAAI,WAAW,KAAK,SAAL,CAAe,WAAW,MAA1B,CAAf;AACA,WAAO,SAAS,IAAI,EAAb,EAAiB,EAAE,KAAK,gBAAgB,IAAI,GAApB,CAAP,EAAjB,CAAP;AACD;;AAED,WAAS,kBAAT,CAA4B,GAA5B,EAAiC;AAC/B,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC5C,gCAA0B,UAAU,SAAV,EAAqB;AAC7C,YAAI,SAAJ,EAAe;AACb,kBAAQ,cAAc,GAAd,CAAR;AACD,SAFD,MAEO;AACL,iBACE,IAAI,OAAO,iBAAX,CAA6B,iCAA7B,CADF;AAGD;AACF,OARD;AASD,KAVM,CAAP;AAWD;;AAED,WAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,WAAO,aAAa,IAAI,EAAjB,EAAqB,uBAArB,CAAP;AACD;;AAED,WAAS,aAAT,CAAuB,GAAvB,EAA4B;AAC1B,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB;AACpC,UAAI,YAAY,IAAI,GAAJ,CAAQ,IAAI,GAAZ,CAAhB;AACA,UAAI,cAAc,YAAY,KAAZ,CAAkB,UAAU,MAA5B,EAAoC,IAAtD;AACA,UAAI,CAAC,WAAL,EAAkB;AAChB,cAAM,IAAI,KAAJ,CAAU,yCAAyC,IAAI,GAAvD,CAAN;AACD;AACD,UAAI,OAAO,UAAU,IAArB;;AAEA;AACA;AACA;AACA,UAAI,KAAK,OAAL,CAAa,eAAb,MAAkC,CAAtC,EAAyC;AACvC,eAAO,EAAP;AACD;;AAED,iBAAW,MAAX,CACE,IAAI,EADN,EAEE;AACE,aAAK,mBAAmB,WAAnB,IAAkC;AADzC,OAFF,EAKE,OALF;AAOD,KAtBM,CAAP;AAuBD;;AAED,WAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,QAAI,CAAC,eAAe,IAAI,GAAnB,CAAL,EAA8B;AAC5B,aAAO,QAAQ,OAAR,EAAP;AACD;AACD,WAAO,aAAa,IAAI,EAAjB,EAAqB,mBAArB,CAAP;AACD;;AAED;;;;AAIA,WAAS,YAAT,CAAsB,KAAtB,EAA6B,IAA7B,EAAmC;AACjC,WAAO,gBAAgB,KAAhB,EAAuB,EAAE,MAAM,IAAR,EAAvB,CAAP;AACD;;AAED;;;;;;;AAOA,WAAS,YAAT,CAAsB,KAAtB,EAA6B,MAA7B,EAAqC;AACnC,QAAI,YAAY,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,IAA/B,EAAqC,KAArC,CAAhB;AACA,QAAI,aACF,6BACA,SADA,GAEA,MAFA,GAGA,GAHA,GAIA,mBAAmB,QAAnB,EAJA,GAKA,GALA,GAMA,+CAPF;AAQA,WAAO,gBAAgB,KAAhB,EAAuB,EAAE,MAAM,UAAR,EAAvB,CAAP;AACD;AACF;;;;;;;;kBC/SuB,Q;;AA9CxB;;;;AAEA;;IAAY,O;;;;;;AAEZ,IAAI,SAAS;AACX,UAAQ,QADG;AAEX,YAAU,UAFC;AAGX,WAAS;AAHE,CAAb;;AAMA;AACA,IAAI,gBAAgB;AAClB;AACA,SAAO,OAAO,QAFI;AAGlB;;;AAGA,mBAAiB,CANC;AAOlB;;;AAGA,6BAA2B,KAVT;AAWlB;AACA,SAAO,KAZW;AAalB;AACA,SAAO;AAdW,CAApB;;AAiBA;;;;;;;;;;;;;;;;;;AAkBe,SAAS,QAAT,CAAkB,YAAlB,EAAgC,QAAhC,EAA0C;AACvD,MAAI,OAAO,IAAX;AACA,MAAI,YAAJ;;AAEA,OAAK,QAAL,GAAgB,YAAY,IAA5B;;AAEA;;;;;;;AAOA,OAAK,IAAL,GAAY,UAAU,QAAV,EAAoB;AAC9B,QAAI,kBAAkB,EAAtB;AACA,WAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAU,KAAV,EAAiB;AAC7C,sBAAgB,KAAhB,IAAyB,OAAO,MAAP,CACvB,EADuB,EAEvB,aAFuB,EAGvB,SAAS,KAAT,CAHuB,CAAzB;AAKD,KAND;AAOA,mBAAe,eAAf;AACD,GAVD;;AAYA,OAAK,WAAL,GAAmB,UAAU,KAAV,EAAiB;AAClC,SAAK,QAAL,CAAc,KAAd,EAAqB,EAAE,OAAO,OAAO,MAAhB,EAArB;AACD,GAFD;;AAIA,OAAK,aAAL,GAAqB,UAAU,KAAV,EAAiB;AACpC,SAAK,QAAL,CAAc,KAAd,EAAqB,EAAE,OAAO,OAAO,QAAhB,EAArB;AACD,GAFD;;AAIA,OAAK,QAAL,GAAgB,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACtC,SAAK,QAAL,CAAc,KAAd,EAAqB;AACnB,aAAO,OAAO,OADK;AAEnB,aAAO;AAFY,KAArB;AAID,GALD;;AAOA,OAAK,QAAL,GAAgB,UAAU,KAAV,EAAiB;AAC/B,SAAK,QAAL,CAAc,KAAd,EAAqB,IAArB;AACD,GAFD;;AAIA,OAAK,QAAL,GAAgB,UAAU,KAAV,EAAiB;AAC/B,QAAI,CAAC,aAAa,KAAb,CAAL,EAA0B;AACxB,aAAO,aAAP;AACD;AACD,WAAO,aAAa,KAAb,CAAP;AACD,GALD;;AAOA,OAAK,eAAL,GAAuB,UAAU,KAAV,EAAiB;AACtC,WAAO,KAAK,QAAL,CAAc,KAAd,EAAqB,eAA5B;AACD,GAFD;;AAIA,OAAK,WAAL,GAAmB,UAAU,KAAV,EAAiB;AAClC,WAAO,KAAK,QAAL,CAAc,KAAd,EAAqB,KAArB,KAA+B,OAAO,MAA7C;AACD,GAFD;;AAIA,OAAK,aAAL,GAAqB,UAAU,KAAV,EAAiB;AACpC,WAAO,KAAK,QAAL,CAAc,KAAd,EAAqB,KAArB,KAA+B,OAAO,QAA7C;AACD,GAFD;;AAIA,OAAK,YAAL,GAAoB,UAAU,KAAV,EAAiB;AACnC,WAAO,KAAK,QAAL,CAAc,KAAd,EAAqB,KAArB,KAA+B,OAAO,OAA7C;AACD,GAFD;;AAIA;;;;;;;;AAQA,OAAK,QAAL,GAAgB,UAAU,KAAV,EAAiB,WAAjB,EAA8B;AAC5C,QAAI,QAAJ;AACA,QAAI,WAAJ,EAAiB;AACf,iBAAW,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAK,QAAL,CAAc,KAAd,CAAlB,EAAwC,WAAxC,CAAX;AACA,UAAI,SAAS,KAAT,KAAmB,OAAO,OAA9B,EAAuC;AACrC,iBAAS,KAAT,GAAiB,SAAjB;AACD;AACF;;AAED,QAAI,8BAAe,QAAf,EAAyB,aAAa,KAAb,CAAzB,CAAJ,EAAmD;AACjD;AACD;;AAED,iBAAa,KAAb,IAAsB,QAAtB;;AAEA,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,QAAL,CAAc,KAAd,EAAqB,QAArB;AACD;AACF,GAlBD;;AAoBA;;;;;;;;AAQA,OAAK,qBAAL,GAA6B,UAAU,KAAV,EAAiB,MAAjB,EAAyB;AACpD,QAAI,OAAO,IAAX;AACA,WAAO,QACJ,KADI,CACE,MADF,EAEJ,IAFI,CAEC,UAAU,MAAV,EAAkB;AACtB,WAAK,QAAL,CAAc,KAAd,EAAqB,EAAE,iBAAiB,OAAO,KAA1B,EAArB;AACD,KAJI,EAKJ,KALI,CAKE,UAAU,GAAV,EAAe;AACpB,WAAK,QAAL,CAAc,KAAd,EAAqB,EAAE,iBAAiB,CAAnB,EAArB;AACA,cAAQ,KAAR,CACE,6CADF,EAEE,MAFF,EAGE,GAHF;AAKD,KAZI,CAAP;AAaD,GAfD;;AAiBA,OAAK,IAAL,CAAU,gBAAgB,EAA1B;AACD;;AAED,SAAS,MAAT,GAAkB,MAAlB;;;;;;;;kBClKwB,Q;AAPxB;;;;;;;AAOe,SAAS,QAAT,CAAkB,OAAlB,EAA2B;AACxC,MAAI,MAAM,OAAV;AACA,MAAI,KAAJ;;AAEA,OAAK,GAAL,GAAW,UAAU,KAAV,EAAiB;AAC1B,QAAI,QAAQ,MAAM,KAAN,CAAZ;AACA,QAAI,CAAC,KAAL,EAAY;AACV,YAAM,IAAI,KAAJ,CAAU,iDAAiD,KAA3D,CAAN;AACD;AACD,WAAO,KAAP;AACD,GAND;;AAQA,OAAK,GAAL,GAAW,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACjC;AACA;AACA,UAAM,KAAN,IAAe;AACb,aAAO,MAAM,KADA;AAEb,uBAAiB,MAAM;AAFV,KAAf;AAIA,YAAQ,OAAR,CAAgB,GAAhB,EAAqB,KAAK,SAAL,CAAe,KAAf,CAArB;AACD,GARD;;AAUA,OAAK,KAAL,GAAa,UAAU,KAAV,EAAiB;AAC5B,WAAO,MAAM,KAAN,CAAP;AACA,YAAQ,OAAR,CAAgB,GAAhB,EAAqB,KAAK,SAAL,CAAe,KAAf,CAArB;AACD,GAHD;;AAKA,OAAK,GAAL,GAAW,YAAY;AACrB,WAAO,KAAP;AACD,GAFD;;AAIA,OAAK,MAAL,GAAc,YAAY;AACxB,QAAI;AACF,cAAQ,EAAR;AACA,UAAI,SAAS,KAAK,KAAL,CAAW,QAAQ,OAAR,CAAgB,GAAhB,CAAX,CAAb;AACA,aAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAU,GAAV,EAAe;AACzC;AACA;AACA;AACA,YAAI,OAAO,OAAO,GAAP,CAAP,KAAuB,QAA3B,EAAqC;AACnC,gBAAM,GAAN,IAAa,EAAE,OAAO,OAAO,GAAP,CAAT,EAAb;AACD,SAFD,MAEO;AACL,gBAAM,GAAN,IAAa,OAAO,GAAP,CAAb;AACD;AACF,OATD;AAUD,KAbD,CAaE,OAAO,CAAP,EAAU;AACV,cAAQ,IAAR;AACD;AACD,YAAQ,SAAS,EAAjB;AACD,GAlBD;;AAoBA,OAAK,MAAL;AACD;;;;;;;;QChDe,K,GAAA,K;;AAXhB;;;;;;AAEA;AACA,SAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,SAAO,mBAAmB,GAAnB,EAAwB,OAAxB,CAAgC,MAAhC,EAAwC,GAAxC,CAAP;AACD;;AAED;;;;AAIO,SAAS,KAAT,CAAe,GAAf,EAAoB;AACzB,SAAO,MAAM,mBAAS,MAAT,GAAkB,aAAlB,GAAkC,eAAe,GAAf,CAAxC,EAA6D;AAClE,iBAAa;AADqD,GAA7D,EAGJ,IAHI,CAGC,UAAU,GAAV,EAAe;AACnB,WAAO,IAAI,IAAJ,EAAP;AACD,GALI,EAMJ,IANI,CAMC,UAAU,IAAV,EAAgB;AACpB,QAAI,OAAO,KAAK,KAAZ,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD,WAAO,IAAP;AACD,GAXI,CAAP;AAYD;;;;;;;;QCAe,S,GAAA,S;AAxBhB,SAAS,YAAT,GAAwB;AACtB,MAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,SAA5C,EAAuD;AACrD,WAAO,OAAO,SAAP,CAAiB,SAAxB;AACD,GAFD,MAEO;AACL,WAAO,SAAP;AACD;AACF;;AAED;;;;;;;;;;;;;;;;AAgBO,SAAS,SAAT,CAAmB,EAAnB,EAAuB;AAC5B,SAAO,YAAY;AACjB,QAAI,OAAO,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,CAAX;AACA,QAAI,SAAS,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAClD,SAAG,KAAH,CACE,IADF,EAEE,KAAK,MAAL,CAAY,UAAU,MAAV,EAAkB;AAC5B,YAAI,YAAY,cAAhB;AACA,YAAI,SAAJ,EAAe;AACb,iBAAO,SAAP;AACD,SAFD,MAEO;AACL,kBAAQ,MAAR;AACD;AACF,OAPD,CAFF;AAWD,KAZY,CAAb;AAaA,WAAO,MAAP;AACD,GAhBD;AAiBD",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/*!\n * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\n\nmodule.exports = function isEqual(a, b) {\n  if (!a && !b) { return true; }\n  if (!a && b || a && !b) { return false; }\n\n  var numKeysA = 0, numKeysB = 0, key;\n  for (key in b) {\n    numKeysB++;\n    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) {\n      return false;\n    }\n  }\n  for (key in a) {\n    numKeysA++;\n  }\n  return numKeysA === numKeysB;\n};\n",
    "/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/7\nmodule.exports = function isPrimitive(value) {\n  return value == null || (typeof value !== 'function' && typeof value !== 'object');\n};\n",
    "'use strict';\nvar strictUriEncode = require('strict-uri-encode');\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str) {\n\tif (typeof str !== 'string') {\n\t\treturn {};\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn {};\n\t}\n\n\treturn str.split('&').reduce(function (ret, param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\tkey = decodeURIComponent(key);\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tif (!ret.hasOwnProperty(key)) {\n\t\t\tret[key] = val;\n\t\t} else if (Array.isArray(ret[key])) {\n\t\t\tret[key].push(val);\n\t\t} else {\n\t\t\tret[key] = [ret[key], val];\n\t\t}\n\n\t\treturn ret;\n\t}, {});\n};\n\nexports.stringify = function (obj) {\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn key;\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\treturn val.slice().sort().map(function (val2) {\n\t\t\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val2);\n\t\t\t}).join('&');\n\t\t}\n\n\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n",
    "function RavenConfigError(message) {\n  this.name = 'RavenConfigError';\n  this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n",
    "var utils = require('./utils');\n\nvar wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = utils.safeJoin(args, ' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg =\n          'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n",
    "/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar md5 = require('../vendor/md5/md5');\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\nvar isErrorEvent = utils.isErrorEvent;\nvar isDOMError = utils.isDOMError;\nvar isDOMException = utils.isDOMException;\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isPlainObject = utils.isPlainObject;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\nvar supportsReferrerPolicy = utils.supportsReferrerPolicy;\nvar serializeKeysForMessage = utils.serializeKeysForMessage;\nvar serializeException = utils.serializeException;\nvar sanitize = utils.sanitize;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback)\n    ? function(data) {\n        return callback(data, original);\n      }\n    : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin\n    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    captureUnhandledRejections: true,\n    maxMessageLength: 0,\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1,\n    sanitizeKeys: []\n  };\n  this._fetchDefaults = {\n    method: 'POST',\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.27.2',\n\n  debug: false,\n\n  TraceKit: TraceKit, // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function(key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length\n      ? joinRegExp(globalOptions.ignoreUrls)\n      : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length\n      ? joinRegExp(globalOptions.whitelistUrls)\n      : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(\n      0,\n      Math.min(globalOptions.maxBreadcrumbs || 100, 100)\n    ); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function() {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function() {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      if (self._globalOptions.captureUnhandledRejections) {\n        self._attachPromiseRejectionHandler();\n      }\n\n      self._patchFunctionToString();\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function(dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n\n    self._globalServer = self._getGlobalServer(uri);\n\n    self._globalEndpoint =\n      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = {};\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} _before A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function(options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || (options && options.deep !== false);\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n\n    return wrapped;\n  },\n\n  /**\n   * Uninstalls the global error handler.\n   *\n   * @return {Raven}\n   */\n  uninstall: function() {\n    TraceKit.report.uninstall();\n\n    this._detachPromiseRejectionHandler();\n    this._unpatchFunctionToString();\n    this._restoreBuiltIns();\n    this._restoreConsole();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n\n    return this;\n  },\n\n  /**\n   * Callback used for `unhandledrejection` event\n   *\n   * @param {PromiseRejectionEvent} event An object containing\n   *   promise: the Promise that was rejected\n   *   reason: the value with which the Promise was rejected\n   * @return void\n   */\n  _promiseRejectionHandler: function(event) {\n    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);\n    this.captureException(event.reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false\n      }\n    });\n  },\n\n  /**\n   * Installs the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _attachPromiseRejectionHandler: function() {\n    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);\n    _window.addEventListener &&\n      _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Uninstalls the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _detachPromiseRejectionHandler: function() {\n    _window.removeEventListener &&\n      _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Manually capture an exception and send it over to Sentry\n   *\n   * @param {error} ex An exception to be logged\n   * @param {object} options A specific set of options for this error [optional]\n   * @return {Raven}\n   */\n  captureException: function(ex, options) {\n    options = objectMerge({trimHeadFrames: 0}, options ? options : {});\n\n    if (isErrorEvent(ex) && ex.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      ex = ex.error;\n    } else if (isDOMError(ex) || isDOMException(ex)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');\n      var message = ex.message ? name + ': ' + ex.message : name;\n\n      return this.captureMessage(\n        message,\n        objectMerge(options, {\n          // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well\n          // but it's barely any overhead so we may at least try\n          stacktrace: true,\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    } else if (isError(ex)) {\n      // we have a real Error object\n      ex = ex;\n    } else if (isPlainObject(ex)) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);\n      ex = new Error(options.message);\n    } else {\n      // If none of previous checks were valid, then it means that\n      // it's not a DOMError/DOMException\n      // it's not a plain Object\n      // it's not a valid ErrorEvent (one with an error property)\n      // it's not an Error\n      // So bail out and capture it as a simple message:\n      return this.captureMessage(\n        ex,\n        objectMerge(options, {\n          stacktrace: true, // if we fall back to captureMessage, default to attempting a new trace\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    }\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  _getCaptureExceptionOptionsFromPlainObject: function(currentOptions, ex) {\n    var exKeys = Object.keys(ex).sort();\n    var options = objectMerge(currentOptions, {\n      message:\n        'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),\n      fingerprint: [md5(exKeys)],\n      extra: currentOptions.extra || {}\n    });\n    options.extra.__serialized__ = serializeException(ex);\n\n    return options;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      this._globalOptions.ignoreErrors.test(msg)\n    ) {\n      return;\n    }\n\n    options = options || {};\n    msg = msg + ''; // Make sure it's actually a string\n\n    var data = objectMerge(\n      {\n        message: msg\n      },\n      options\n    );\n\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = isArray(stack.stack) && stack.stack[1];\n\n    // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call\n    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd\n    // initialCall => captureException(string) => captureMessage(string)\n    if (initialCall && initialCall.func === 'Raven.captureException') {\n      initialCall = stack.stack[2];\n    }\n\n    var fileurl = (initialCall && initialCall.url) || '';\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    // Always attempt to get stacktrace if message is empty.\n    // It's the only way to provide any helpful information to the user.\n    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {\n      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)\n      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;\n\n      options = objectMerge(\n        {\n          trimHeadFrames: 0\n        },\n        options\n      );\n      // Since we know this is a synthetic trace, the top frame (this function call)\n      // MUST be from Raven.js, so mark it for trimming\n      // We add to the trim counter so that callers can choose to trim extra frames, such\n      // as utility functions.\n      options.trimHeadFrames += 1;\n\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Make sure that fingerprint is always wrapped in an array\n    if (data.fingerprint) {\n      data.fingerprint = isArray(data.fingerprint)\n        ? data.fingerprint\n        : [data.fingerprint];\n    }\n\n    // Fire away!\n    this._send(data);\n\n    return this;\n  },\n\n  captureBreadcrumb: function(obj) {\n    var crumb = objectMerge(\n      {\n        timestamp: now() / 1000\n      },\n      obj\n    );\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n\n  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function() {\n    this._globalContext = {};\n\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function(environment) {\n    this._globalOptions.environment = environment;\n\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function(release) {\n    this._globalOptions.release = release;\n\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function(transport) {\n    this._globalOptions.transport = transport;\n\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function() {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function() {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function() {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n\n  afterLoad: function() {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n\n  showReportDialog: function(options) {\n    if (\n      !_document // doesn't work without a document (React native)\n    )\n      return;\n\n    options = objectMerge(\n      {\n        eventId: this.lastEventId(),\n        dsn: this._dsn,\n        user: this._globalContext.user || {}\n      },\n      options\n    );\n\n    if (!options.eventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    if (!options.dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var encodedOptions = [];\n\n    for (var key in options) {\n      if (key === 'user') {\n        var user = options.user;\n        if (user.name) encodedOptions.push('name=' + encode(user.name));\n        if (user.email) encodedOptions.push('email=' + encode(user.email));\n      } else {\n        encodedOptions.push(encode(key) + '=' + encode(options[key]));\n      }\n    }\n    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));\n\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function() {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n\n  _triggerEvent: function(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n\n    if (!this._hasDocument) return;\n\n    options = options || {};\n\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options)\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function(evtName) {\n    var self = this;\n    return function(evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName, // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function() {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function(evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (\n        !tagName ||\n        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n      )\n        return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function() {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n      to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n      from = parsedFrom.relative;\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  _patchFunctionToString: function() {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString;\n    // eslint-disable-next-line no-extend-native\n    Function.prototype.toString = function() {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n\n  _unpatchFunctionToString: function() {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function() {\n    var self = this;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function(fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: orig.name || '<anonymous>'}\n              }\n            },\n            originalCallback\n          );\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(\n          proto,\n          'addEventListener',\n          function(orig) {\n            return function(evtName, fn, capture, secure) {\n              // preserve arity\n              try {\n                if (fn && fn.handleEvent) {\n                  fn.handleEvent = self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          target: global,\n                          function: 'handleEvent',\n                          handler: (fn && fn.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    fn.handleEvent\n                  );\n                }\n              } catch (err) {\n                // can sometimes get 'Permission denied to access property \"handle Event'\n              }\n\n              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n              // so that we don't have more than one wrapper function\n              var before, clickHandler, keypressHandler;\n\n              if (\n                autoBreadcrumbs &&\n                autoBreadcrumbs.dom &&\n                (global === 'EventTarget' || global === 'Node')\n              ) {\n                // NOTE: generating multiple handlers per addEventListener invocation, should\n                //       revisit and verify we can just use one (almost certainly)\n                clickHandler = self._breadcrumbEventHandler('click');\n                keypressHandler = self._keypressEventHandler();\n                before = function(evt) {\n                  // need to intercept every DOM event in `before` argument, in case that\n                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                  // see #724\n                  if (!evt) return;\n\n                  var eventType;\n                  try {\n                    eventType = evt.type;\n                  } catch (e) {\n                    // just accessing event properties can throw an exception in some rare circumstances\n                    // see: https://github.com/getsentry/raven-js/issues/838\n                    return;\n                  }\n                  if (eventType === 'click') return clickHandler(evt);\n                  else if (eventType === 'keypress') return keypressHandler(evt);\n                };\n              }\n              return orig.call(\n                this,\n                evtName,\n                self.wrap(\n                  {\n                    mechanism: {\n                      type: 'instrument',\n                      data: {\n                        target: global,\n                        function: 'addEventListener',\n                        handler: (fn && fn.name) || '<anonymous>'\n                      }\n                    }\n                  },\n                  fn,\n                  before\n                ),\n                capture,\n                secure\n              );\n            };\n          },\n          wrappedBuiltIns\n        );\n        fill(\n          proto,\n          'removeEventListener',\n          function(orig) {\n            return function(evt, fn, capture, secure) {\n              try {\n                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n              } catch (e) {\n                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n              }\n              return orig.call(this, evt, fn, capture, secure);\n            };\n          },\n          wrappedBuiltIns\n        );\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(\n        _window,\n        'requestAnimationFrame',\n        function(orig) {\n          return function(cb) {\n            return orig(\n              self.wrap(\n                {\n                  mechanism: {\n                    type: 'instrument',\n                    data: {\n                      function: 'requestAnimationFrame',\n                      handler: (orig && orig.name) || '<anonymous>'\n                    }\n                  }\n                },\n                cb\n              )\n            );\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload'\n    ];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function(orig) {\n          return self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: prop, handler: (orig && orig.name) || '<anonymous>'}\n              }\n            },\n            orig\n          );\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;\n      fill(\n        xhrproto,\n        'open',\n        function(origOpen) {\n          return function(method, url) {\n            // preserve arity\n\n            // if Sentry key appears in URL, don't capture\n            if (isString(url) && url.indexOf(self._globalKey) === -1) {\n              this.__raven_xhr = {\n                method: method,\n                url: url,\n                status_code: null\n              };\n            }\n\n            return origOpen.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n\n      fill(\n        xhrproto,\n        'send',\n        function(origSend) {\n          return function() {\n            // preserve arity\n            var xhr = this;\n\n            function onreadystatechangeHandler() {\n              if (xhr.__raven_xhr && xhr.readyState === 4) {\n                try {\n                  // touching statusCode in some platforms throws\n                  // an exception\n                  xhr.__raven_xhr.status_code = xhr.status;\n                } catch (e) {\n                  /* do nothing */\n                }\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'xhr',\n                  data: xhr.__raven_xhr\n                });\n              }\n            }\n\n            var props = ['onload', 'onerror', 'onprogress'];\n            for (var j = 0; j < props.length; j++) {\n              wrapProp(props[j], xhr);\n            }\n\n            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n              fill(\n                xhr,\n                'onreadystatechange',\n                function(orig) {\n                  return self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          function: 'onreadystatechange',\n                          handler: (orig && orig.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    orig,\n                    onreadystatechangeHandler\n                  );\n                } /* intentionally don't track this instrumentation */\n              );\n            } else {\n              // if onreadystatechange wasn't actually set by the page on this xhr, we\n              // are free to set our own and capture the breadcrumb\n              xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n\n            return origSend.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(\n        _window,\n        'fetch',\n        function(origFetch) {\n          return function() {\n            // preserve arity\n            // Make a copy of the arguments to prevent deoptimization\n            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n            var args = new Array(arguments.length);\n            for (var i = 0; i < args.length; ++i) {\n              args[i] = arguments[i];\n            }\n\n            var fetchInput = args[0];\n            var method = 'GET';\n            var url;\n\n            if (typeof fetchInput === 'string') {\n              url = fetchInput;\n            } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n              url = fetchInput.url;\n              if (fetchInput.method) {\n                method = fetchInput.method;\n              }\n            } else {\n              url = '' + fetchInput;\n            }\n\n            // if Sentry key appears in URL, don't capture, as it's our own request\n            if (url.indexOf(self._globalKey) !== -1) {\n              return origFetch.apply(this, args);\n            }\n\n            if (args[1] && args[1].method) {\n              method = args[1].method;\n            }\n\n            var fetchData = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n\n            return origFetch\n              .apply(this, args)\n              .then(function(response) {\n                fetchData.status_code = response.status;\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData\n                });\n\n                return response;\n              })\n              ['catch'](function(err) {\n                // if there is an error performing the request\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData,\n                  level: 'error'\n                });\n\n                throw err;\n              });\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else if (_document.attachEvent) {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState =\n      !isChromePackagedApp &&\n      _window.history &&\n      _window.history.pushState &&\n      _window.history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function() {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function(origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function(/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n\n  _restoreBuiltIns: function() {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n\n      obj[name] = orig;\n    }\n  },\n\n  _restoreConsole: function() {\n    // eslint-disable-next-line guard-for-in\n    for (var method in this._originalConsoleMethods) {\n      this._originalConsole[method] = this._originalConsoleMethods[method];\n    }\n  },\n\n  _drainPlugins: function() {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function(_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n\n  _parseDSN: function(str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError(\n        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'\n      );\n    }\n\n    return dsn;\n  },\n\n  _getGlobalServer: function(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n\n  _handleOnErrorStackInfo: function(stackInfo, options) {\n    options = options || {};\n    options.mechanism = options.mechanism || {\n      type: 'onerror',\n      handled: false\n    };\n\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo(stackInfo, options);\n    }\n  },\n\n  _handleStackInfo: function(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(\n      stackInfo.name,\n      stackInfo.message,\n      stackInfo.url,\n      stackInfo.lineno,\n      frames,\n      options\n    );\n  },\n\n  _prepareFrames: function(stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function(i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n\n  _normalizeFrame: function(frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !// determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    (\n      (!!this._globalOptions.includePaths.test &&\n        !this._globalOptions.includePaths.test(normalized.filename)) ||\n      // Now we check for fun, if the function name is Raven or TraceKit\n      /(Raven|TraceKit)\\./.test(normalized['function']) ||\n      // finally, we do a last ditch effort and check for raven.min.js\n      /raven\\.(min\\.)?js$/.test(normalized.filename)\n    );\n\n    return normalized;\n  },\n\n  _processException: function(type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      (this._globalOptions.ignoreErrors.test(message) ||\n        this._globalOptions.ignoreErrors.test(prefixedMessage))\n    ) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {frames: frames};\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [\n          {\n            filename: fileurl,\n            lineno: lineno,\n            in_app: true\n          }\n        ]\n      };\n    }\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    var data = objectMerge(\n      {\n        // sentry.interfaces.Exception\n        exception: {\n          values: [\n            {\n              type: type,\n              value: message,\n              stacktrace: stacktrace\n            }\n          ]\n        },\n        transaction: fileurl\n      },\n      options\n    );\n\n    var ex = data.exception.values[0];\n    if (ex.type == null && ex.value === '') {\n      ex.value = 'Unrecoverable error caught';\n    }\n\n    // Move mechanism from options to exception interface\n    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be\n    // too much\n    if (!data.exception.mechanism && data.mechanism) {\n      data.exception.mechanism = data.mechanism;\n      delete data.mechanism;\n    }\n\n    data.exception.mechanism = objectMerge(\n      {\n        type: 'generic',\n        handled: true\n      },\n      data.exception.mechanism || {}\n    );\n\n    // Fire away!\n    this._send(data);\n  },\n\n  _trimPacket: function(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values)\n      this._trimBreadcrumbs(data.breadcrumbs);\n\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (\n        !crumb.hasOwnProperty('data') ||\n        !isObject(crumb.data) ||\n        objectFrozen(crumb.data)\n      )\n        continue;\n\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n\n  _getHttpData: function() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': _navigator.userAgent\n      };\n    }\n\n    // Check in `window` instead of `document`, as we may be in ServiceWorker environment\n    if (_window.location && _window.location.href) {\n      httpData.url = _window.location.href;\n    }\n\n    if (this._hasDocument && _document.referrer) {\n      if (!httpData.headers) httpData.headers = {};\n      httpData.headers.Referer = _document.referrer;\n    }\n\n    return httpData;\n  },\n\n  _resetBackoff: function() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n\n  _shouldBackoff: function() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function(current) {\n    var last = this._lastData;\n\n    if (\n      !last ||\n      current.message !== last.message || // defined for captureMessage\n      current.transaction !== last.transaction // defined for captureException/onerror\n    )\n      return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    } else if (current.fingerprint || last.fingerprint) {\n      return Boolean(current.fingerprint && last.fingerprint) &&\n        JSON.stringify(current.fingerprint) === JSON.stringify(last.fingerprint)\n    }\n\n    return true;\n  },\n\n  _setBackoffState: function(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      }\n\n      // Retry-After is returned in seconds\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry\n      ? // If Sentry server returned a Retry-After value, use it\n        retry\n      : // Otherwise, double the last backoff duration (starts at 1 sec)\n        this._backoffDuration * 2 || 1000;\n\n    this._backoffStart = now();\n  },\n\n  _send: function(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    data = this._sanitizeData(data);\n\n    // Cleanup empty properties before sending them to the server\n    Object.keys(data).forEach(function(key) {\n      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {\n        delete data[key];\n      }\n    });\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (\n      isFunction(globalOptions.shouldSendCallback) &&\n      !globalOptions.shouldSendCallback(data)\n    ) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n\n  _sanitizeData: function(data) {\n    return sanitize(data, this._globalOptions.sanitizeKeys);\n  },\n\n  _getUuid: function() {\n    return uuid4();\n  },\n\n  _sendProcessedPayload: function(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n\n    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n    if (\n      this._globalOptions.autoBreadcrumbs &&\n      this._globalOptions.autoBreadcrumbs.sentry\n    ) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception\n          ? (exception.type ? exception.type + ': ' : '') + exception.value\n          : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n      });\n    }\n\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n\n  _makeRequest: function(opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n\n    var evaluatedHeaders = null;\n    var evaluatedFetchParameters = {};\n\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHash(opts.options.headers);\n    }\n\n    if (opts.options.fetchParameters) {\n      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);\n    }\n\n    if (supportsFetch()) {\n      evaluatedFetchParameters.body = stringify(opts.data);\n\n      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);\n      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);\n\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n\n      return _window\n        .fetch(url, fetchOptions)\n        .then(function(response) {\n          if (response.ok) {\n            opts.onSuccess && opts.onSuccess();\n          } else {\n            var error = new Error('Sentry error code: ' + response.status);\n            // It's called request only to keep compatibility with XHR interface\n            // and not add more redundant checks in setBackoffState method\n            error.request = response;\n            opts.onError && opts.onError(error);\n          }\n        })\n        ['catch'](function() {\n          opts.onError &&\n            opts.onError(new Error('Sentry error code: network unavailable'));\n        });\n    }\n\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n\n    if (!hasCORS) return;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function() {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function() {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    request.open('POST', url);\n\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function(key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n\n    request.send(stringify(opts.data));\n  },\n\n  _evaluateHash: function(hash) {\n    var evaluated = {};\n\n    for (var key in hash) {\n      if (hash.hasOwnProperty(key)) {\n        var value = hash[key];\n        evaluated[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n\n    return evaluated;\n  },\n\n  _logDebug: function(level) {\n    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change\n    if (\n      this._originalConsoleMethods[level] &&\n      (this.debug || this._globalOptions.debug)\n    ) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(\n        this._originalConsoleMethods[level],\n        this._originalConsole,\n        [].slice.call(arguments, 1)\n      );\n    }\n  },\n\n  _mergeContext: function(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n",
    "/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\nvar RavenConstructor = require('./raven');\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _Raven = _window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function() {\n  _window.Raven = _Raven;\n  return Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n\n/**\n * DISCLAIMER:\n *\n * Expose `Client` constructor for cases where user want to track multiple \"sub-applications\" in one larger app.\n * It's not meant to be used by a wide audience, so pleaaase make sure that you know what you're doing before using it.\n * Accidentally calling `install` multiple times, may result in an unexpected behavior that's very hard to debug.\n *\n * It's called `Client' to be in-line with Raven Node implementation.\n *\n * HOWTO:\n *\n * import Raven from 'raven-js';\n *\n * const someAppReporter = new Raven.Client();\n * const someOtherAppReporter = new Raven.Client();\n *\n * someAppReporter.config('__DSN__', {\n *   ...config goes here\n * });\n *\n * someOtherAppReporter.config('__OTHER_DSN__', {\n *   ...config goes here\n * });\n *\n * someAppReporter.captureMessage(...);\n * someAppReporter.captureException(...);\n * someAppReporter.captureBreadcrumb(...);\n *\n * someOtherAppReporter.captureMessage(...);\n * someOtherAppReporter.captureException(...);\n * someOtherAppReporter.captureBreadcrumb(...);\n *\n * It should \"just work\".\n */\nmodule.exports.Client = RavenConstructor;\n",
    "var stringify = require('../vendor/json-stringify-safe/stringify');\n\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n      ? global\n      : typeof self !== 'undefined'\n        ? self\n        : {};\n\nfunction isObject(what) {\n  return typeof what === 'object' && what !== null;\n}\n\n// Yanked from https://git.io/vS8DV re-used under CC0\n// with some tiny modifications\nfunction isError(value) {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return value instanceof Error;\n  }\n}\n\nfunction isErrorEvent(value) {\n  return Object.prototype.toString.call(value) === '[object ErrorEvent]';\n}\n\nfunction isDOMError(value) {\n  return Object.prototype.toString.call(value) === '[object DOMError]';\n}\n\nfunction isDOMException(value) {\n  return Object.prototype.toString.call(value) === '[object DOMException]';\n}\n\nfunction isUndefined(what) {\n  return what === void 0;\n}\n\nfunction isFunction(what) {\n  return typeof what === 'function';\n}\n\nfunction isPlainObject(what) {\n  return Object.prototype.toString.call(what) === '[object Object]';\n}\n\nfunction isString(what) {\n  return Object.prototype.toString.call(what) === '[object String]';\n}\n\nfunction isArray(what) {\n  return Object.prototype.toString.call(what) === '[object Array]';\n}\n\nfunction isEmptyObject(what) {\n  if (!isPlainObject(what)) return false;\n\n  for (var _ in what) {\n    if (what.hasOwnProperty(_)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsDOMError() {\n  try {\n    new DOMError(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsDOMException() {\n  try {\n    new DOMException(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsFetch() {\n  if (!('fetch' in _window)) return false;\n\n  try {\n    new Headers(); // eslint-disable-line no-new\n    new Request(''); // eslint-disable-line no-new\n    new Response(); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n// https://caniuse.com/#feat=referrer-policy\n// It doesn't. And it throw exception instead of ignoring this parameter...\n// REF: https://github.com/getsentry/raven-js/issues/1233\nfunction supportsReferrerPolicy() {\n  if (!supportsFetch()) return false;\n\n  try {\n    // eslint-disable-next-line no-new\n    new Request('pickleRick', {\n      referrerPolicy: 'origin'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsPromiseRejectionEvent() {\n  return typeof PromiseRejectionEvent === 'function';\n}\n\nfunction wrappedCallback(callback) {\n  function dataCallback(data, original) {\n    var normalizedData = callback(data) || data;\n    if (original) {\n      return original(normalizedData) || normalizedData;\n    }\n    return normalizedData;\n  }\n\n  return dataCallback;\n}\n\nfunction each(obj, callback) {\n  var i, j;\n\n  if (isUndefined(obj.length)) {\n    for (i in obj) {\n      if (hasKey(obj, i)) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  } else {\n    j = obj.length;\n    if (j) {\n      for (i = 0; i < j; i++) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  }\n}\n\nfunction objectMerge(obj1, obj2) {\n  if (!obj2) {\n    return obj1;\n  }\n  each(obj2, function(key, value) {\n    obj1[key] = value;\n  });\n  return obj1;\n}\n\n/**\n * This function is only used for react-native.\n * react-native freezes object that have already been sent over the\n * js bridge. We need this function in order to check if the object is frozen.\n * So it's ok that objectFrozen returns false if Object.isFrozen is not\n * supported because it's not relevant for other \"platforms\". See related issue:\n * https://github.com/getsentry/react-native-sentry/issues/57\n */\nfunction objectFrozen(obj) {\n  if (!Object.isFrozen) {\n    return false;\n  }\n  return Object.isFrozen(obj);\n}\n\nfunction truncate(str, max) {\n  if (typeof max !== 'number') {\n    throw new Error('2nd argument to `truncate` function should be a number');\n  }\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n  // Combine an array of regular expressions and strings into one large regexp\n  // Be mad.\n  var sources = [],\n    i = 0,\n    len = patterns.length,\n    pattern;\n\n  for (; i < len; i++) {\n    pattern = patterns[i];\n    if (isString(pattern)) {\n      // If it's a string, we need to escape it\n      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n    } else if (pattern && pattern.source) {\n      // If it's a regexp already, we want to extract the source\n      sources.push(pattern.source);\n    }\n    // Intentionally skip other cases\n  }\n  return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n  var pairs = [];\n  each(o, function(key, value) {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n  });\n  return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n  if (typeof url !== 'string') return {};\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    protocol: match[2],\n    host: match[4],\n    path: match[5],\n    relative: match[5] + query + fragment // everything minus origin\n  };\n}\nfunction uuid4() {\n  var crypto = _window.crypto || _window.msCrypto;\n\n  if (!isUndefined(crypto) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    // eslint-disable-next-line no-undef\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = function(num) {\n      var v = num.toString(16);\n      while (v.length < 4) {\n        v = '0' + v;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) +\n      pad(arr[1]) +\n      pad(arr[2]) +\n      pad(arr[3]) +\n      pad(arr[4]) +\n      pad(arr[5]) +\n      pad(arr[6]) +\n      pad(arr[7])\n    );\n  } else {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n  /* eslint no-extra-parens:0*/\n  var MAX_TRAVERSE_HEIGHT = 5,\n    MAX_OUTPUT_LEN = 80,\n    out = [],\n    height = 0,\n    len = 0,\n    separator = ' > ',\n    sepLength = separator.length,\n    nextStr;\n\n  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = htmlElementAsString(elem);\n    // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n    if (\n      nextStr === 'html' ||\n      (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)\n    ) {\n      break;\n    }\n\n    out.push(nextStr);\n\n    len += nextStr.length;\n    elem = elem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n  var out = [],\n    className,\n    classes,\n    key,\n    attr,\n    i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push('#' + elem.id);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push('.' + classes[i]);\n    }\n  }\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push('[' + key + '=\"' + attr + '\"]');\n    }\n  }\n  return out.join('');\n}\n\n/**\n * Returns true if either a OR b is truthy, but not both\n */\nfunction isOnlyOneTruthy(a, b) {\n  return !!(!!a ^ !!b);\n}\n\n/**\n * Returns true if both parameters are undefined\n */\nfunction isBothUndefined(a, b) {\n  return isUndefined(a) && isUndefined(b);\n}\n\n/**\n * Returns true if the two input exception interfaces have the same content\n */\nfunction isSameException(ex1, ex2) {\n  if (isOnlyOneTruthy(ex1, ex2)) return false;\n\n  ex1 = ex1.values[0];\n  ex2 = ex2.values[0];\n\n  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;\n\n  // in case both stacktraces are undefined, we can't decide so default to false\n  if (isBothUndefined(ex1.stacktrace, ex2.stacktrace)) return false;\n\n  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\n}\n\n/**\n * Returns true if the two input stack trace interfaces have the same content\n */\nfunction isSameStacktrace(stack1, stack2) {\n  if (isOnlyOneTruthy(stack1, stack2)) return false;\n\n  var frames1 = stack1.frames;\n  var frames2 = stack2.frames;\n\n  // Exit early if stacktrace is malformed\n  if (frames1 === undefined || frames2 === undefined) return false;\n\n  // Exit early if frame count differs\n  if (frames1.length !== frames2.length) return false;\n\n  // Iterate through every frame; bail out if anything differs\n  var a, b;\n  for (var i = 0; i < frames1.length; i++) {\n    a = frames1[i];\n    b = frames2[i];\n    if (\n      a.filename !== b.filename ||\n      a.lineno !== b.lineno ||\n      a.colno !== b.colno ||\n      a['function'] !== b['function']\n    )\n      return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n  if (obj == null) return;\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  obj[name].__raven__ = true;\n  obj[name].__orig__ = orig;\n  if (track) {\n    track.push([obj, name, orig]);\n  }\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns {string}\n */\nfunction safeJoin(input, delimiter) {\n  if (!isArray(input)) return '';\n\n  var output = [];\n\n  for (var i = 0; i < input.length; i++) {\n    try {\n      output.push(String(input[i]));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n// Default Node.js REPL depth\nvar MAX_SERIALIZE_EXCEPTION_DEPTH = 3;\n// 50kB, as 100kB is max payload size, so half sounds reasonable\nvar MAX_SERIALIZE_EXCEPTION_SIZE = 50 * 1024;\nvar MAX_SERIALIZE_KEYS_LENGTH = 40;\n\nfunction utf8Length(value) {\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nfunction serializeValue(value) {\n  if (typeof value === 'string') {\n    var maxLength = 40;\n    return truncate(value, maxLength);\n  } else if (\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined'\n  ) {\n    return value;\n  }\n\n  var type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (type === '[object Object]') return '[Object]';\n  if (type === '[object Array]') return '[Array]';\n  if (type === '[object Function]')\n    return value.name ? '[Function: ' + value.name + ']' : '[Function]';\n\n  return value;\n}\n\nfunction serializeObject(value, depth) {\n  if (depth === 0) return serializeValue(value);\n\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(function(acc, key) {\n      acc[key] = serializeObject(value[key], depth - 1);\n      return acc;\n    }, {});\n  } else if (Array.isArray(value)) {\n    return value.map(function(val) {\n      return serializeObject(val, depth - 1);\n    });\n  }\n\n  return serializeValue(value);\n}\n\nfunction serializeException(ex, depth, maxSize) {\n  if (!isPlainObject(ex)) return ex;\n\n  depth = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_DEPTH : depth;\n  maxSize = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_SIZE : maxSize;\n\n  var serialized = serializeObject(ex, depth);\n\n  if (jsonSize(stringify(serialized)) > maxSize) {\n    return serializeException(ex, depth - 1);\n  }\n\n  return serialized;\n}\n\nfunction serializeKeysForMessage(keys, maxLength) {\n  if (typeof keys === 'number' || typeof keys === 'string') return keys.toString();\n  if (!Array.isArray(keys)) return '';\n\n  keys = keys.filter(function(key) {\n    return typeof key === 'string';\n  });\n  if (keys.length === 0) return '[object has no keys]';\n\n  maxLength = typeof maxLength !== 'number' ? MAX_SERIALIZE_KEYS_LENGTH : maxLength;\n  if (keys[0].length >= maxLength) return keys[0];\n\n  for (var usedKeys = keys.length; usedKeys > 0; usedKeys--) {\n    var serialized = keys.slice(0, usedKeys).join(', ');\n    if (serialized.length > maxLength) continue;\n    if (usedKeys === keys.length) return serialized;\n    return serialized + '\\u2026';\n  }\n\n  return '';\n}\n\nfunction sanitize(input, sanitizeKeys) {\n  if (!isArray(sanitizeKeys) || (isArray(sanitizeKeys) && sanitizeKeys.length === 0))\n    return input;\n\n  var sanitizeRegExp = joinRegExp(sanitizeKeys);\n  var sanitizeMask = '********';\n  var safeInput;\n\n  try {\n    safeInput = JSON.parse(stringify(input));\n  } catch (o_O) {\n    return input;\n  }\n\n  function sanitizeWorker(workerInput) {\n    if (isArray(workerInput)) {\n      return workerInput.map(function(val) {\n        return sanitizeWorker(val);\n      });\n    }\n\n    if (isPlainObject(workerInput)) {\n      return Object.keys(workerInput).reduce(function(acc, k) {\n        if (sanitizeRegExp.test(k)) {\n          acc[k] = sanitizeMask;\n        } else {\n          acc[k] = sanitizeWorker(workerInput[k]);\n        }\n        return acc;\n      }, {});\n    }\n\n    return workerInput;\n  }\n\n  return sanitizeWorker(safeInput);\n}\n\nmodule.exports = {\n  isObject: isObject,\n  isError: isError,\n  isErrorEvent: isErrorEvent,\n  isDOMError: isDOMError,\n  isDOMException: isDOMException,\n  isUndefined: isUndefined,\n  isFunction: isFunction,\n  isPlainObject: isPlainObject,\n  isString: isString,\n  isArray: isArray,\n  isEmptyObject: isEmptyObject,\n  supportsErrorEvent: supportsErrorEvent,\n  supportsDOMError: supportsDOMError,\n  supportsDOMException: supportsDOMException,\n  supportsFetch: supportsFetch,\n  supportsReferrerPolicy: supportsReferrerPolicy,\n  supportsPromiseRejectionEvent: supportsPromiseRejectionEvent,\n  wrappedCallback: wrappedCallback,\n  each: each,\n  objectMerge: objectMerge,\n  truncate: truncate,\n  objectFrozen: objectFrozen,\n  hasKey: hasKey,\n  joinRegExp: joinRegExp,\n  urlencode: urlencode,\n  uuid4: uuid4,\n  htmlTreeAsString: htmlTreeAsString,\n  htmlElementAsString: htmlElementAsString,\n  isSameException: isSameException,\n  isSameStacktrace: isSameStacktrace,\n  parseUrl: parseUrl,\n  fill: fill,\n  safeJoin: safeJoin,\n  serializeException: serializeException,\n  serializeKeysForMessage: serializeKeysForMessage,\n  sanitize: sanitize\n};\n",
    "var utils = require('../../src/utils');\n\n/*\n TraceKit - Cross brower stack traces\n\n This was originally forked from github.com/occ/TraceKit, but has since been\n largely re-written and is now maintained as part of raven-js.  Tests for\n this are in test/vendor.\n\n MIT license\n*/\n\nvar TraceKit = {\n  collectWindowErrors: true,\n  debug: false\n};\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : typeof self !== 'undefined'\n    ? self\n    : {};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n\nfunction getLocationHref() {\n  if (typeof document === 'undefined' || document.location == null) return '';\n  return document.location.href;\n}\n\nfunction getLocationOrigin() {\n  if (typeof document === 'undefined' || document.location == null) return '';\n\n  // Oh dear IE10...\n  if (!document.location.origin) {\n    return (\n      document.location.protocol +\n      '//' +\n      document.location.hostname +\n      (document.location.port ? ':' + document.location.port : '')\n    );\n  }\n\n  return document.location.origin;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n  var handlers = [],\n    lastArgs = null,\n    lastException = null,\n    lastExceptionStack = null;\n\n  /**\n   * Add a crash handler.\n   * @param {Function} handler\n   */\n  function subscribe(handler) {\n    installGlobalHandler();\n    handlers.push(handler);\n  }\n\n  /**\n   * Remove a crash handler.\n   * @param {Function} handler\n   */\n  function unsubscribe(handler) {\n    for (var i = handlers.length - 1; i >= 0; --i) {\n      if (handlers[i] === handler) {\n        handlers.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * Remove all crash handlers.\n   */\n  function unsubscribeAll() {\n    uninstallGlobalHandler();\n    handlers = [];\n  }\n\n  /**\n   * Dispatch stack information to all handlers.\n   * @param {Object.<string, *>} stack\n   */\n  function notifyHandlers(stack, isWindowError) {\n    var exception = null;\n    if (isWindowError && !TraceKit.collectWindowErrors) {\n      return;\n    }\n    for (var i in handlers) {\n      if (handlers.hasOwnProperty(i)) {\n        try {\n          handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n        } catch (inner) {\n          exception = inner;\n        }\n      }\n    }\n\n    if (exception) {\n      throw exception;\n    }\n  }\n\n  var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n  /**\n   * Ensures all global unhandled exceptions are recorded.\n   * Supported by Gecko and IE.\n   * @param {string} msg Error message.\n   * @param {string} url URL of script that generated the exception.\n   * @param {(number|string)} lineNo The line number at which the error\n   * occurred.\n   * @param {?(number|string)} colNo The column number at which the error\n   * occurred.\n   * @param {?Error} ex The actual Error object.\n   */\n  function traceKitWindowOnError(msg, url, lineNo, colNo, ex) {\n    var stack = null;\n    // If 'ex' is ErrorEvent, get real Error from inside\n    var exception = utils.isErrorEvent(ex) ? ex.error : ex;\n    // If 'msg' is ErrorEvent, get real message from inside\n    var message = utils.isErrorEvent(msg) ? msg.message : msg;\n\n    if (lastExceptionStack) {\n      TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(\n        lastExceptionStack,\n        url,\n        lineNo,\n        message\n      );\n      processLastException();\n    } else if (exception && utils.isError(exception)) {\n      // non-string `exception` arg; attempt to extract stack trace\n\n      // New chrome and blink send along a real error object\n      // Let's just report that like a normal error.\n      // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n      stack = TraceKit.computeStackTrace(exception);\n      notifyHandlers(stack, true);\n    } else {\n      var location = {\n        url: url,\n        line: lineNo,\n        column: colNo\n      };\n\n      var name = undefined;\n      var groups;\n\n      if ({}.toString.call(message) === '[object String]') {\n        var groups = message.match(ERROR_TYPES_RE);\n        if (groups) {\n          name = groups[1];\n          message = groups[2];\n        }\n      }\n\n      location.func = UNKNOWN_FUNCTION;\n\n      stack = {\n        name: name,\n        message: message,\n        url: getLocationHref(),\n        stack: [location]\n      };\n      notifyHandlers(stack, true);\n    }\n\n    if (_oldOnerrorHandler) {\n      return _oldOnerrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  }\n\n  function installGlobalHandler() {\n    if (_onErrorHandlerInstalled) {\n      return;\n    }\n    _oldOnerrorHandler = _window.onerror;\n    _window.onerror = traceKitWindowOnError;\n    _onErrorHandlerInstalled = true;\n  }\n\n  function uninstallGlobalHandler() {\n    if (!_onErrorHandlerInstalled) {\n      return;\n    }\n    _window.onerror = _oldOnerrorHandler;\n    _onErrorHandlerInstalled = false;\n    _oldOnerrorHandler = undefined;\n  }\n\n  function processLastException() {\n    var _lastExceptionStack = lastExceptionStack,\n      _lastArgs = lastArgs;\n    lastArgs = null;\n    lastExceptionStack = null;\n    lastException = null;\n    notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n  }\n\n  /**\n   * Reports an unhandled Error to TraceKit.\n   * @param {Error} ex\n   * @param {?boolean} rethrow If false, do not re-throw the exception.\n   * Only used for window.onerror to not cause an infinite loop of\n   * rethrowing.\n   */\n  function report(ex, rethrow) {\n    var args = _slice.call(arguments, 1);\n    if (lastExceptionStack) {\n      if (lastException === ex) {\n        return; // already caught by an inner catch block, ignore\n      } else {\n        processLastException();\n      }\n    }\n\n    var stack = TraceKit.computeStackTrace(ex);\n    lastExceptionStack = stack;\n    lastException = ex;\n    lastArgs = args;\n\n    // If the stack trace is incomplete, wait for 2 seconds for\n    // slow slow IE to see if onerror occurs or not before reporting\n    // this exception; otherwise, we will end up with an incomplete\n    // stack trace\n    setTimeout(\n      function() {\n        if (lastException === ex) {\n          processLastException();\n        }\n      },\n      stack.incomplete ? 2000 : 0\n    );\n\n    if (rethrow !== false) {\n      throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n  }\n\n  report.subscribe = subscribe;\n  report.unsubscribe = unsubscribe;\n  report.uninstall = unsubscribeAll;\n  return report;\n})();\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n  // Contents of Exception in various browsers.\n  //\n  // SAFARI:\n  // ex.message = Can't find variable: qq\n  // ex.line = 59\n  // ex.sourceId = 580238192\n  // ex.sourceURL = http://...\n  // ex.expressionBeginOffset = 96\n  // ex.expressionCaretOffset = 98\n  // ex.expressionEndOffset = 98\n  // ex.name = ReferenceError\n  //\n  // FIREFOX:\n  // ex.message = qq is not defined\n  // ex.fileName = http://...\n  // ex.lineNumber = 59\n  // ex.columnNumber = 69\n  // ex.stack = ...stack trace... (see the example below)\n  // ex.name = ReferenceError\n  //\n  // CHROME:\n  // ex.message = qq is not defined\n  // ex.name = ReferenceError\n  // ex.type = not_defined\n  // ex.arguments = ['aa']\n  // ex.stack = ...stack trace...\n  //\n  // INTERNET EXPLORER:\n  // ex.message = ...\n  // ex.name = ReferenceError\n  //\n  // OPERA:\n  // ex.message = ...message... (see the example below)\n  // ex.name = ReferenceError\n  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n  /**\n   * Computes stack trace information from the stack property.\n   * Chrome and Gecko use this property.\n   * @param {Error} ex\n   * @return {?Object.<string, *>} Stack trace information.\n   */\n  function computeStackTraceFromStackProp(ex) {\n    if (typeof ex.stack === 'undefined' || !ex.stack) return;\n\n    var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n    var winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx(?:-web)|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n    // NOTE: blob urls are now supposed to always have an origin, therefore it's format\n    // which is `blob:http://url/path/with-some-uuid`, is matched by `blob.*?:\\/` as well\n    var gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n    // Used to additionally parse URL/line/column from eval frames\n    var geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n    var chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n    var lines = ex.stack.split('\\n');\n    var stack = [];\n    var submatch;\n    var parts;\n    var element;\n    var reference = /^(.*) is undefined$/.exec(ex.message);\n\n    for (var i = 0, j = lines.length; i < j; ++i) {\n      if ((parts = chrome.exec(lines[i]))) {\n        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n        var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n          parts[3] = submatch[2]; // line\n          parts[4] = submatch[3]; // column\n        }\n        element = {\n          url: !isNative ? parts[2] : null,\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: isNative ? [parts[2]] : [],\n          line: parts[3] ? +parts[3] : null,\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = winjs.exec(lines[i]))) {\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: [],\n          line: +parts[3],\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = gecko.exec(lines[i]))) {\n        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = null; // no column when eval\n        } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          stack[0].column = ex.columnNumber + 1;\n        }\n        element = {\n          url: parts[3],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: parts[2] ? parts[2].split(',') : [],\n          line: parts[4] ? +parts[4] : null,\n          column: parts[5] ? +parts[5] : null\n        };\n      } else {\n        continue;\n      }\n\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      if (element.url && element.url.substr(0, 5) === 'blob:') {\n        // Special case for handling JavaScript loaded into a blob.\n        // We use a synchronous AJAX request here as a blob is already in\n        // memory - it's not making a network request.  This will generate a warning\n        // in the browser console, but there has already been an error so that's not\n        // that much of an issue.\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', element.url, false);\n        xhr.send(null);\n\n        // If we failed to download the source, skip this patch\n        if (xhr.status === 200) {\n          var source = xhr.responseText || '';\n\n          // We trim the source down to the last 300 characters as sourceMappingURL is always at the end of the file.\n          // Why 300? To be in line with: https://github.com/getsentry/sentry/blob/4af29e8f2350e20c28a6933354e4f42437b4ba42/src/sentry/lang/javascript/processor.py#L164-L175\n          source = source.slice(-300);\n\n          // Now we dig out the source map URL\n          var sourceMaps = source.match(/\\/\\/# sourceMappingURL=(.*)$/);\n\n          // If we don't find a source map comment or we find more than one, continue on to the next element.\n          if (sourceMaps) {\n            var sourceMapAddress = sourceMaps[1];\n\n            // Now we check to see if it's a relative URL.\n            // If it is, convert it to an absolute one.\n            if (sourceMapAddress.charAt(0) === '~') {\n              sourceMapAddress = getLocationOrigin() + sourceMapAddress.slice(1);\n            }\n\n            // Now we strip the '.map' off of the end of the URL and update the\n            // element so that Sentry can match the map to the blob.\n            element.url = sourceMapAddress.slice(0, -4);\n          }\n        }\n      }\n\n      stack.push(element);\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n  }\n\n  /**\n   * Adds information about the first frame to incomplete stack traces.\n   * Safari and IE require this to get complete data on the first frame.\n   * @param {Object.<string, *>} stackInfo Stack trace information from\n   * one of the compute* methods.\n   * @param {string} url The URL of the script that caused an error.\n   * @param {(number|string)} lineNo The line number of the script that\n   * caused an error.\n   * @param {string=} message The error generated by the browser, which\n   * hopefully contains the name of the object that caused the error.\n   * @return {boolean} Whether or not the stack information was\n   * augmented.\n   */\n  function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n    var initial = {\n      url: url,\n      line: lineNo\n    };\n\n    if (initial.url && initial.line) {\n      stackInfo.incomplete = false;\n\n      if (!initial.func) {\n        initial.func = UNKNOWN_FUNCTION;\n      }\n\n      if (stackInfo.stack.length > 0) {\n        if (stackInfo.stack[0].url === initial.url) {\n          if (stackInfo.stack[0].line === initial.line) {\n            return false; // already in stack trace\n          } else if (\n            !stackInfo.stack[0].line &&\n            stackInfo.stack[0].func === initial.func\n          ) {\n            stackInfo.stack[0].line = initial.line;\n            return false;\n          }\n        }\n      }\n\n      stackInfo.stack.unshift(initial);\n      stackInfo.partial = true;\n      return true;\n    } else {\n      stackInfo.incomplete = true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Computes stack trace information by walking the arguments.caller\n   * chain at the time the exception occurred. This will cause earlier\n   * frames to be missed but is the only way to get any stack trace in\n   * Safari and IE. The top frame is restored by\n   * {@link augmentStackTraceWithInitialElement}.\n   * @param {Error} ex\n   * @return {?Object.<string, *>} Stack trace information.\n   */\n  function computeStackTraceByWalkingCallerChain(ex, depth) {\n    var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n      stack = [],\n      funcs = {},\n      recursion = false,\n      parts,\n      item,\n      source;\n\n    for (\n      var curr = computeStackTraceByWalkingCallerChain.caller;\n      curr && !recursion;\n      curr = curr.caller\n    ) {\n      if (curr === computeStackTrace || curr === TraceKit.report) {\n        // console.log('skipping internal function');\n        continue;\n      }\n\n      item = {\n        url: null,\n        func: UNKNOWN_FUNCTION,\n        line: null,\n        column: null\n      };\n\n      if (curr.name) {\n        item.func = curr.name;\n      } else if ((parts = functionName.exec(curr.toString()))) {\n        item.func = parts[1];\n      }\n\n      if (typeof item.func === 'undefined') {\n        try {\n          item.func = parts.input.substring(0, parts.input.indexOf('{'));\n        } catch (e) {}\n      }\n\n      if (funcs['' + curr]) {\n        recursion = true;\n      } else {\n        funcs['' + curr] = true;\n      }\n\n      stack.push(item);\n    }\n\n    if (depth) {\n      // console.log('depth is ' + depth);\n      // console.log('stack is ' + stack.length);\n      stack.splice(0, depth);\n    }\n\n    var result = {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n    augmentStackTraceWithInitialElement(\n      result,\n      ex.sourceURL || ex.fileName,\n      ex.line || ex.lineNumber,\n      ex.message || ex.description\n    );\n    return result;\n  }\n\n  /**\n   * Computes a stack trace for an exception.\n   * @param {Error} ex\n   * @param {(string|number)=} depth\n   */\n  function computeStackTrace(ex, depth) {\n    var stack = null;\n    depth = depth == null ? 0 : +depth;\n\n    try {\n      stack = computeStackTraceFromStackProp(ex);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n\n    try {\n      stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref()\n    };\n  }\n\n  computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n  computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n\n  return computeStackTrace;\n})();\n\nmodule.exports = TraceKit;\n",
    "/*\n json-stringify-safe\n Like JSON.stringify, but doesn't throw on circular references.\n\n Originally forked from https://github.com/isaacs/json-stringify-safe\n version 5.0.1 on 3/8/2017 and modified to handle Errors serialization\n and IE8 compatibility. Tests for this are in test/vendor.\n\n ISC license: https://github.com/isaacs/json-stringify-safe/blob/master/LICENSE\n*/\n\nexports = module.exports = stringify;\nexports.getSerialize = serializer;\n\nfunction indexOf(haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) return i;\n  }\n  return -1;\n}\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);\n}\n\n// https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\nfunction stringifyError(value) {\n  var err = {\n    // These properties are implemented as magical getters and don't show up in for in\n    stack: value.stack,\n    message: value.message,\n    name: value.name\n  };\n\n  for (var i in value) {\n    if (Object.prototype.hasOwnProperty.call(value, i)) {\n      err[i] = value[i];\n    }\n  }\n\n  return err;\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [];\n  var keys = [];\n\n  if (cycleReplacer == null) {\n    cycleReplacer = function(key, value) {\n      if (stack[0] === value) {\n        return '[Circular ~]';\n      }\n      return '[Circular ~.' + keys.slice(0, indexOf(stack, value)).join('.') + ']';\n    };\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = indexOf(stack, this);\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n\n      if (~indexOf(stack, value)) {\n        value = cycleReplacer.call(this, key, value);\n      }\n    } else {\n      stack.push(value);\n    }\n\n    return replacer == null\n      ? value instanceof Error ? stringifyError(value) : value\n      : replacer.call(this, key, value);\n  };\n}\n",
    "/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*\n* Add integers, wrapping at 2^32. This uses 16-bit operations internally\n* to work around bugs in some JS interpreters.\n*/\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xffff);\n}\n\n/*\n* Bitwise rotate a 32-bit number to the left.\n*/\nfunction bitRotateLeft(num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/*\n* These functions implement the four basic operations the algorithm uses.\n*/\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/*\n* Calculate the MD5 of an array of little-endian words, and a bit length.\n*/\nfunction binlMD5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << (len % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  var i;\n  var olda;\n  var oldb;\n  var oldc;\n  var oldd;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n\n/*\n* Convert an array of little-endian words to a string\n*/\nfunction binl2rstr(input) {\n  var i;\n  var output = '';\n  var length32 = input.length * 32;\n  for (i = 0; i < length32; i += 8) {\n    output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff);\n  }\n  return output;\n}\n\n/*\n* Convert a raw string to an array of little-endian words\n* Characters >255 have their high-byte silently ignored.\n*/\nfunction rstr2binl(input) {\n  var i;\n  var output = [];\n  output[(input.length >> 2) - 1] = undefined;\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n  var length8 = input.length * 8;\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32);\n  }\n  return output;\n}\n\n/*\n* Calculate the MD5 of a raw string\n*/\nfunction rstrMD5(s) {\n  return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\n/*\n* Calculate the HMAC-MD5, of a key and some data (raw strings)\n*/\nfunction rstrHMACMD5(key, data) {\n  var i;\n  var bkey = rstr2binl(key);\n  var ipad = [];\n  var opad = [];\n  var hash;\n  ipad[15] = opad[15] = undefined;\n  if (bkey.length > 16) {\n    bkey = binlMD5(bkey, key.length * 8);\n  }\n  for (i = 0; i < 16; i += 1) {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5c5c5c5c;\n  }\n  hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n  return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n}\n\n/*\n* Convert a raw string to a hex string\n*/\nfunction rstr2hex(input) {\n  var hexTab = '0123456789abcdef';\n  var output = '';\n  var x;\n  var i;\n  for (i = 0; i < input.length; i += 1) {\n    x = input.charCodeAt(i);\n    output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n  }\n  return output;\n}\n\n/*\n* Encode a string as utf-8\n*/\nfunction str2rstrUTF8(input) {\n  return unescape(encodeURIComponent(input));\n}\n\n/*\n* Take string arguments and return either raw or hex encoded strings\n*/\nfunction rawMD5(s) {\n  return rstrMD5(str2rstrUTF8(s));\n}\nfunction hexMD5(s) {\n  return rstr2hex(rawMD5(s));\n}\nfunction rawHMACMD5(k, d) {\n  return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n}\nfunction hexHMACMD5(k, d) {\n  return rstr2hex(rawHMACMD5(k, d));\n}\n\nfunction md5(string, key, raw) {\n  if (!key) {\n    if (!raw) {\n      return hexMD5(string);\n    }\n    return rawMD5(string);\n  }\n  if (!raw) {\n    return hexHMACMD5(key, string);\n  }\n  return rawHMACMD5(key, string);\n}\n\nmodule.exports = md5;\n",
    "'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n",
    "import settings from './settings';\nimport TabState from './tab-state';\n\n// Cache the tab state constants.\nvar states = TabState.states;\n\n// Each button state has two icons one for normal resolution (19) and one\n// for hi-res screens (38).\nvar icons = {};\nicons[states.ACTIVE] = {\n  19: 'images/browser-icon-active.png',\n  38: 'images/browser-icon-active@2x.png',\n};\nicons[states.INACTIVE] = {\n  19: 'images/browser-icon-inactive.png',\n  38: 'images/browser-icon-inactive@2x.png',\n};\n\n// themes to apply to the toolbar icon badge depending on the type of\n// build. Production builds use the default color and no text\nvar badgeThemes = {\n  dev: {\n    defaultText: 'DEV',\n    color: '#5BCF59', // Emerald green\n  },\n  qa: {\n    defaultText: 'QA',\n    color: '#EDA061', // Porche orange-pink\n  },\n};\n\n// Fake localization function.\nfunction _(str) {\n  return str;\n}\n\n/* Controls the display of the browser action button setting the icon, title\n * and badges depending on the current state of the tab.\n *\n * BrowserAction is responsible for mapping the logical H state of\n * a tab (whether the extension is active, annotation count) to\n * the badge state.\n */\nexport default function BrowserAction(chromeBrowserAction) {\n  var buildType = settings.buildType;\n\n  /**\n   * Updates the state of the browser action to reflect the logical\n   * H state of a tab.\n   *\n   * @param state - The H state of a tab. See the 'tab-state' module.\n   */\n  this.update = function (tabId, state) {\n    var activeIcon = icons[states.INACTIVE];\n    var title = '';\n    var badgeText = '';\n\n    if (state.state === states.ACTIVE) {\n      activeIcon = icons[states.ACTIVE];\n      title = 'Hypothesis is active';\n    } else if (state.state === states.INACTIVE) {\n      title = 'Hypothesis is inactive';\n    } else if (state.state === states.ERRORED) {\n      title = 'Hypothesis failed to load';\n      badgeText = '!';\n    } else {\n      throw new Error('Unknown tab state');\n    }\n\n    // display the annotation count on the badge\n    if (state.state !== states.ERRORED && state.annotationCount) {\n      var countLabel;\n      var totalString = state.annotationCount.toString();\n      if (state.annotationCount > 999) {\n        totalString = '999+';\n      }\n      if (state.annotationCount === 1) {\n        countLabel = _(\"There's 1 annotation on this page\");\n      } else {\n        countLabel = _(\n          'There are ' + totalString + ' annotations on this page'\n        );\n      }\n      title = countLabel;\n      badgeText = totalString;\n    }\n\n    // update the badge style to reflect the build type\n    var badgeTheme = badgeThemes[buildType];\n    if (badgeTheme) {\n      chromeBrowserAction.setBadgeBackgroundColor({\n        tabId: tabId,\n        color: badgeTheme.color,\n      });\n      if (!badgeText) {\n        badgeText = badgeTheme.defaultText;\n      }\n    }\n\n    chromeBrowserAction.setBadgeText({ tabId: tabId, text: badgeText });\n    chromeBrowserAction.setIcon({ tabId: tabId, path: activeIcon });\n    chromeBrowserAction.setTitle({ tabId: tabId, title: title });\n  };\n}\n\nBrowserAction.icons = icons;\n",
    "/**\n * Returns the name of the current browser.\n *\n * @return {'chrome'|'firefox'}\n */\nexport default function browserName() {\n  if (window.browser) {\n    return 'firefox';\n  } else {\n    return 'chrome';\n  }\n}\n",
    "/**\n * Returns the type of content in the current document,\n * currently either 'PDF' or 'HTML'.\n *\n * This function is injected as a content script into tabs in\n * order to detect the type of content on the page (PDF, HTML) etc.\n * by sniffing for viewer plugins.\n *\n * In future this could also be extended to support extraction of the URLs\n * of content in embedded viewers where that differs from the tab's\n * main URL.\n */\nexport default function detectContentType(document_) {\n  document_ = document_ || document;\n\n  function detectChromePDFViewer() {\n    // When viewing a PDF in Chrome, the viewer consists of a top-level\n    // document with an <embed> tag, which in turn instantiates an inner HTML\n    // document providing the PDF viewer UI plus another <embed> tag which\n    // instantiates the native PDF renderer.\n    //\n    // The selector below matches the <embed> tag in the top-level document. To\n    // see this document, open the developer tools from Chrome's menu rather\n    // than right-clicking on the viewport and selecting the 'Inspect' option\n    // which will instead show the _inner_ document.\n    if (document_.querySelector('embed[type=\"application/pdf\"]')) {\n      return { type: 'PDF' };\n    }\n    return null;\n  }\n\n  function detectFirefoxPDFViewer() {\n    // The Firefox PDF viewer is an instance of PDF.js.\n    //\n    // The Firefox PDF plugin specifically can be detected via the <base>\n    // tag it includes, which can be done from a content script (which runs\n    // in an isolated JS world from the page's own scripts).\n    //\n    // Generic PDF.js detection can be done by looking for the\n    // `window.PDFViewerApplication` object. This however requires running JS\n    // code in the same JS context as the page's own code.\n    if (document_.baseURI.indexOf('resource://pdf.js') === 0) {\n      return { type: 'PDF' };\n    }\n    return null;\n  }\n\n  var detectFns = [detectChromePDFViewer, detectFirefoxPDFViewer];\n  for (var i = 0; i < detectFns.length; i++) {\n    var typeInfo = detectFns[i]();\n    if (typeInfo) {\n      return typeInfo;\n    }\n  }\n\n  return { type: 'HTML' };\n}\n",
    "/**\n * Subset of the client configuration which causes the client to show a\n * particular set of annotations automatically after it loads.\n *\n * See https://h-client.readthedocs.io/en/latest/publishers/config/#config-settings\n *\n * @typedef {Object} Query\n * @property {string} [annotations] - ID of the direct-linked annotation\n * @property {string} [query] - Filter query from the sidebar\n * @property {string} [group] - ID of the direct-linked group\n */\n\n/**\n * Extracts the direct-linking query from the URL if any.\n *\n * If present, the query causes the extension to activate automatically and\n * show the matching set of annotations.\n *\n * @param {string} url -\n *   The URL which may contain a '#annotations:' fragment specifying which\n *   annotations to show.\n * @return {Query|null}\n *   The direct link query translated into client configuration settings.\n */\nexport default function directLinkQuery(url) {\n  // Annotation IDs are url-safe-base64 identifiers\n  // See https://tools.ietf.org/html/rfc4648#page-7\n  var idMatch = url.match(/#annotations:([A-Za-z0-9_-]+)$/);\n  if (idMatch) {\n    return { annotations: idMatch[1] };\n  }\n\n  var queryMatch = url.match(/#annotations:query:(.*)$/);\n  if (queryMatch) {\n    let query = decodeURIComponent(queryMatch[1]);\n    return { query };\n  }\n\n  // Group IDs (and other \"pubids\" in h) are a subset of ASCII letters and\n  // digits. As a special exception, the \"Public\" group has underscores in its\n  // ID (\"__world__\").\n  var groupMatch = url.match(/#annotations:group:([A-Za-z0-9_]+)$/);\n  if (groupMatch) {\n    return { group: groupMatch[1] };\n  }\n\n  return null;\n}\n",
    "import * as raven from './raven';\n\nexport function ExtensionError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\n\nExtensionError.prototype = Object.create(Error.prototype);\n\nexport function LocalFileError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\n\nLocalFileError.prototype = Object.create(ExtensionError.prototype);\n\nexport function NoFileAccessError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\n\nNoFileAccessError.prototype = Object.create(ExtensionError.prototype);\n\nexport function RestrictedProtocolError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\n\nRestrictedProtocolError.prototype = Object.create(ExtensionError.prototype);\n\nexport function BlockedSiteError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\n\nBlockedSiteError.prototype = Object.create(ExtensionError.prototype);\n\nexport function AlreadyInjectedError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\n\nAlreadyInjectedError.prototype = Object.create(ExtensionError.prototype);\n\n/**\n * Returns true if `err` is a recognized 'expected' error.\n */\nfunction isKnownError(err) {\n  return err instanceof ExtensionError;\n}\n\nvar IGNORED_ERRORS = [\n  // Errors that can happen when the tab is closed during injection\n  /The tab was closed/,\n  /No tab with id.*/,\n  // Attempts to access pages for which Chrome does not allow scripting\n  /Cannot access contents of.*/,\n  /The extensions gallery cannot be scripted/,\n];\n\n/**\n * Returns true if a given `err` is anticipated during sidebar injection, such\n * as the tab being closed by the user, and should not be reported to Sentry.\n *\n * @param {{message: string}} err - The Error-like object\n */\nexport function shouldIgnoreInjectionError(err) {\n  if (\n    IGNORED_ERRORS.some(function (pattern) {\n      return err.message.match(pattern);\n    })\n  ) {\n    return true;\n  }\n  if (isKnownError(err)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Report an error.\n *\n * All errors are logged to the console. Additionally unexpected errors,\n * ie. those which are not instances of ExtensionError, are reported to\n * Sentry.\n *\n * @param {Error} error - The error which happened.\n * @param {string} when - Describes the context in which the error occurred.\n * @param {Object} context - Additional context for the error.\n */\nexport function report(error, when, context) {\n  console.error(when, error);\n  if (!isKnownError(error)) {\n    raven.report(error, when, context);\n  }\n}\n",
    "import browserName from './browser-name';\nimport * as errors from './errors';\n\n/* A controller for displaying help pages. These are bound to extension\n * specific errors (found in errors.js) but can also be triggered manually.\n *\n * chromeTabs   - An instance of chrome.tabs.\n * extensionURL - A function that recieves a path and returns a full path\n *   to the file inside the chrome extension. See:\n *   https://developer.chrome.com/extensions/extension#method-getURL\n */\nexport default function HelpPage(chromeTabs, extensionURL, browserName_) {\n  browserName_ = browserName_ || browserName;\n\n  /* Accepts an instance of errors.ExtensionError and displays an appropriate\n   * help page if one exists.\n   *\n   * @param {Tab} tab   - The tab to display the error message in.\n   * @param {Error} error - The error to display, usually an instance of\n   *                        errors.ExtensionError\n   */\n  this.showHelpForError = function (tab, error) {\n    if (error instanceof errors.LocalFileError) {\n      return this.showLocalFileHelpPage(tab);\n    } else if (error instanceof errors.NoFileAccessError) {\n      return this.showNoFileAccessHelpPage(tab);\n    } else if (error instanceof errors.RestrictedProtocolError) {\n      return this.showRestrictedProtocolPage(tab);\n    } else if (error instanceof errors.BlockedSiteError) {\n      return this.showBlockedSitePage(tab);\n    } else {\n      return this.showOtherErrorPage(tab, error);\n    }\n  };\n\n  this.showLocalFileHelpPage = showHelpPage.bind(null, 'local-file');\n  this.showNoFileAccessHelpPage = showHelpPage.bind(null, 'no-file-access');\n  this.showRestrictedProtocolPage = showHelpPage.bind(\n    null,\n    'restricted-protocol'\n  );\n  this.showBlockedSitePage = showHelpPage.bind(null, 'blocked-site');\n  this.showOtherErrorPage = showHelpPage.bind(null, 'other-error');\n\n  /**\n   * Open a tab displaying the help page.\n   *\n   * @param {string} helpSection - ID of a <section> within the help page.\n   * @param {tabs.Tab} tab - The tab where the error occurred.\n   * @param {Error} error - The error which prompted the help page.\n   */\n  function showHelpPage(helpSection, tab, error) {\n    var params = '';\n    if (error) {\n      params = '?message=' + encodeURIComponent(error.message);\n    }\n\n    var tabOpts = {\n      index: tab.index + 1,\n      url: extensionURL('/help/index.html' + params + '#' + helpSection),\n    };\n\n    // Add `openerTabId` property to associate the help page tab with the\n    // current tab. This property is not supported in Firefox.\n    if (browserName_() !== 'firefox') {\n      tabOpts.openerTabId = tab.id;\n    }\n\n    chromeTabs.create(tabOpts);\n  }\n}\n",
    "import BrowserAction from './browser-action';\nimport directLinkQuery from './direct-link-query';\nimport * as errors from './errors';\nimport HelpPage from './help-page';\nimport settings from './settings';\nimport SidebarInjector from './sidebar-injector';\nimport TabState from './tab-state';\nimport TabStore from './tab-store';\n\nvar TAB_STATUS_LOADING = 'loading';\nvar TAB_STATUS_COMPLETE = 'complete';\n\n/* The main extension application. This wires together all the smaller\n * modules. The app listens to all new created/updated/removed tab events\n * and uses the TabState object to keep track of whether the sidebar is\n * active or inactive in the tab. The app also listens to click events on\n * the browser action and toggles the state and uses the BrowserAction module\n * to update the visual style of the button.\n *\n * The SidebarInjector handles the insertion of the Hypothesis code. If it\n * runs into errors the tab is put into an errored state and when the\n * browser action is clicked again the HelpPage module displays more\n * information to the user.\n *\n * Lastly the TabStore listens to changes to the TabState module and persists\n * the current settings to localStorage. This is then loaded into the\n * application on startup.\n *\n * Relevant Chrome Extension documentation:\n * - https://developer.chrome.com/extensions/browserAction\n * - https://developer.chrome.com/extensions/tabs\n * - https://developer.chrome.com/extensions/extension\n *\n * dependencies - An object to set up the application.\n *   chromeTabs: An instance of chrome.tabs.\n *   chromeBrowserAction: An instance of chrome.browserAction.\n *   extensionURL: chrome.extension.getURL.\n *   isAllowedFileSchemeAccess: chrome.extension.isAllowedFileSchemeAccess.\n */\nexport default function HypothesisChromeExtension(dependencies) {\n  var chromeTabs = dependencies.chromeTabs;\n  var chromeExtension = dependencies.chromeExtension;\n  var chromeStorage = dependencies.chromeStorage;\n  var chromeBrowserAction = dependencies.chromeBrowserAction;\n  var help = new HelpPage(chromeTabs, dependencies.extensionURL);\n  var store = new TabStore(localStorage);\n  var state = new TabState(store.all(), onTabStateChange);\n  var browserAction = new BrowserAction(chromeBrowserAction);\n  var sidebar = new SidebarInjector(chromeTabs, {\n    extensionURL: dependencies.extensionURL,\n    isAllowedFileSchemeAccess: dependencies.isAllowedFileSchemeAccess,\n  });\n\n  restoreSavedTabState();\n\n  /* Sets up the extension and binds event listeners. Requires a window\n   * object to be passed so that it can listen for localStorage events.\n   */\n  this.listen = function () {\n    chromeBrowserAction.onClicked.addListener(onBrowserActionClicked);\n    chromeTabs.onCreated.addListener(onTabCreated);\n\n    // when a user navigates within an existing tab,\n    // onUpdated is fired in most cases\n    chromeTabs.onUpdated.addListener(onTabUpdated);\n\n    // ... but when a user navigates to a page that is loaded\n    // via prerendering or instant results, onTabReplaced is\n    // fired instead. See https://developer.chrome.com/extensions/tabs#event-onReplaced\n    // and https://code.google.com/p/chromium/issues/detail?id=109557\n    chromeTabs.onReplaced.addListener(onTabReplaced);\n\n    chromeTabs.onRemoved.addListener(onTabRemoved);\n  };\n\n  /* A method that can be used to setup the extension on existing tabs\n   * when the extension is re-installed.\n   */\n  this.install = function () {\n    restoreSavedTabState();\n  };\n\n  /* Opens the onboarding page */\n  this.firstRun = function (extensionInfo) {\n    // If we've been installed because of an administrative policy, then don't\n    // open the welcome page in a new tab.\n    //\n    // It's safe to assume that if an admin policy is responsible for installing\n    // the extension, opening the welcome page is going to do more harm than\n    // good, as it will appear that a tab opened without user action.\n    //\n    // See:\n    //\n    //   https://developer.chrome.com/extensions/management#type-ExtensionInstallType\n    //\n    if (extensionInfo.installType === 'admin') {\n      return;\n    }\n\n    chromeTabs.create({ url: settings.serviceUrl + 'welcome' }, function (tab) {\n      state.activateTab(tab.id);\n    });\n  };\n\n  function restoreSavedTabState() {\n    store.reload();\n    state.load(store.all());\n    chromeTabs.query({}, function (tabs) {\n      tabs.forEach(function (tab) {\n        onTabStateChange(tab.id, state.getState(tab.id));\n      });\n    });\n  }\n\n  function onTabStateChange(tabId, current) {\n    if (current) {\n      browserAction.update(tabId, current);\n      chromeTabs.get(tabId, updateTabDocument);\n\n      if (!state.isTabErrored(tabId)) {\n        store.set(tabId, current);\n      }\n    } else {\n      store.unset(tabId);\n    }\n  }\n\n  // exposed for use by tests\n  this._onTabStateChange = onTabStateChange;\n\n  function onBrowserActionClicked(tab) {\n    var tabError = state.getState(tab.id).error;\n    if (tabError) {\n      help.showHelpForError(tab, tabError);\n    } else if (state.isTabActive(tab.id)) {\n      state.deactivateTab(tab.id);\n    } else {\n      state.activateTab(tab.id);\n    }\n  }\n\n  /**\n   * Returns the active state for a tab\n   * which has just been navigated to.\n   */\n  function activeStateForNavigatedTab(tabId) {\n    var activeState = state.getState(tabId).state;\n    if (activeState === TabState.states.ERRORED) {\n      // user had tried to activate H on the previous page but it failed,\n      // retry on the new page\n      activeState = TabState.states.ACTIVE;\n    }\n    return activeState;\n  }\n\n  function resetTabState(tabId, url) {\n    state.setState(tabId, {\n      state: activeStateForNavigatedTab(tabId),\n      ready: false,\n      annotationCount: 0,\n      extensionSidebarInstalled: false,\n    });\n    updateAnnotationCountIfEnabled(tabId, url);\n  }\n\n  // This function will be called multiple times as the tab reloads.\n  // https://developer.chrome.com/extensions/tabs#event-onUpdated\n  //\n  // 'changeInfo' contains details of what changed about the tab's status.\n  // Two important events are when the tab's `status` changes to `loading`\n  // when the user begins a new navigation and when the tab's status changes\n  // to `complete` after the user completes a navigation\n  function onTabUpdated(tabId, changeInfo, tab) {\n    if (changeInfo.status === TAB_STATUS_LOADING) {\n      resetTabState(tabId, tab.url);\n      var query = directLinkQuery(tab.url);\n      if (query) {\n        state.setState(tab.id, { directLinkQuery: query });\n      }\n    } else if (changeInfo.status === TAB_STATUS_COMPLETE) {\n      var tabState = state.getState(tabId);\n      var newActiveState = tabState.state;\n      if (tabState.directLinkQuery) {\n        newActiveState = TabState.states.ACTIVE;\n      }\n      state.setState(tabId, {\n        ready: true,\n        state: newActiveState,\n      });\n    }\n  }\n\n  function onTabReplaced(addedTabId, removedTabId) {\n    state.setState(addedTabId, {\n      state: activeStateForNavigatedTab(removedTabId),\n      ready: true,\n    });\n    state.clearTab(removedTabId);\n\n    chromeTabs.get(addedTabId, function (tab) {\n      updateAnnotationCountIfEnabled(addedTabId, tab.url);\n    });\n  }\n\n  function onTabCreated(tab) {\n    // Clear the state in case there is old, conflicting data in storage.\n    state.clearTab(tab.id);\n  }\n\n  function onTabRemoved(tabId) {\n    state.clearTab(tabId);\n  }\n\n  // installs or uninstalls the sidebar from a tab when the H\n  // state for a tab changes\n  function updateTabDocument(tab) {\n    // If the tab has not yet finished loading then just quietly return.\n    if (!state.getState(tab.id).ready) {\n      return Promise.resolve();\n    }\n\n    var isInstalled = state.getState(tab.id).extensionSidebarInstalled;\n    if (state.isTabActive(tab.id) && !isInstalled) {\n      // optimistically set the state flag indicating that the sidebar\n      // has been installed\n      state.setState(tab.id, {\n        extensionSidebarInstalled: true,\n      });\n\n      var { directLinkQuery } = state.getState(tab.id);\n\n      var config = {\n        // Configure client to load assets and sidebar app from extension.\n        // Note: Even though the sidebar app URL is correct here and the page\n        // does load, Chrome devtools may incorrectly report that it failed to\n        // load. See https://bugs.chromium.org/p/chromium/issues/detail?id=667533\n        assetRoot: chromeExtension.getURL('/client/'),\n        sidebarAppUrl: chromeExtension.getURL('/client/app.html'),\n      };\n\n      // Pass the direct-link query as configuration into the client.\n      //\n      // The reason we don't rely on just putting this into the URL and letting\n      // the client pick it up is to make direct-linking work in sites/apps\n      // that modify the URL fragment as they load. See commit 3143ca27e05d.\n      Object.assign(config, directLinkQuery);\n\n      return sidebar\n        .injectIntoTab(tab, config)\n        .then(function () {\n          // Clear the direct link once H has been successfully injected\n          state.setState(tab.id, { directLinkQuery: undefined });\n        })\n        .catch(function (err) {\n          if (err instanceof errors.AlreadyInjectedError) {\n            state.setState(tab.id, {\n              state: TabState.states.INACTIVE,\n              extensionSidebarInstalled: false,\n            });\n            return;\n          }\n          if (!errors.shouldIgnoreInjectionError(err)) {\n            errors.report(err, 'Injecting Hypothesis sidebar', {\n              url: tab.url,\n            });\n          }\n          state.errorTab(tab.id, err);\n        });\n    } else if (state.isTabInactive(tab.id) && isInstalled) {\n      return sidebar.removeFromTab(tab).then(function () {\n        state.setState(tab.id, {\n          extensionSidebarInstalled: false,\n        });\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function updateAnnotationCountIfEnabled(tabId, url) {\n    if (!chromeStorage.sync) {\n      // Firefox < 53 does not support `chrome.storage.sync`.\n      state.updateAnnotationCount(tabId, url);\n      return;\n    }\n\n    chromeStorage.sync.get(\n      {\n        badge: true,\n      },\n      function (items) {\n        if (items.badge) {\n          state.updateAnnotationCount(tabId, url);\n        }\n      }\n    );\n  }\n}\n",
    "import * as raven from './raven';\n\nif (window.EXTENSION_CONFIG.raven) {\n  raven.init(window.EXTENSION_CONFIG.raven);\n}\n\nimport './hypothesis-chrome-extension';\nimport './install';\n",
    "import HypothesisChromeExtension from './hypothesis-chrome-extension';\n\nvar browserExtension;\n\nexport function init() {\n  browserExtension = new HypothesisChromeExtension({\n    chromeExtension: chrome.extension,\n    chromeTabs: chrome.tabs,\n    chromeBrowserAction: chrome.browserAction,\n    chromeStorage: chrome.storage,\n    extensionURL: function (path) {\n      return chrome.extension.getURL(path);\n    },\n    isAllowedFileSchemeAccess: function (fn) {\n      return chrome.extension.isAllowedFileSchemeAccess(fn);\n    },\n  });\n\n  browserExtension.listen(window);\n}\n\nif (!chrome.isFakeChrome) {\n  init();\n}\n\nif (chrome.runtime.onInstalled) {\n  chrome.runtime.onInstalled.addListener(onInstalled);\n}\n\n// Respond to messages sent by the JavaScript from https://hyp.is.\n// This is how it knows whether the user has this Chrome extension installed.\nif (chrome.runtime.onMessageExternal) {\n  chrome.runtime.onMessageExternal.addListener(function (\n    request,\n    sender,\n    sendResponse\n  ) {\n    if (request.type === 'ping') {\n      sendResponse({ type: 'pong' });\n    }\n  });\n}\n\nif (chrome.runtime.requestUpdateCheck) {\n  chrome.runtime.requestUpdateCheck(function () {\n    chrome.runtime.onUpdateAvailable.addListener(onUpdateAvailable);\n  });\n}\n\nfunction onInstalled(installDetails) {\n  // The install reason can be \"install\", \"update\", \"chrome_update\", or\n  // \"shared_module_update\", see:\n  //\n  //   https://developer.chrome.com/extensions/runtime#type-OnInstalledReason\n  //\n  // If we were installed (rather than updated) then trigger a \"firstRun\" event,\n  // passing in the details of the installed extension. See:\n  //\n  //   https://developer.chrome.com/extensions/management#method-getSelf\n  //\n  if (installDetails.reason === 'install') {\n    chrome.management.getSelf(browserExtension.firstRun);\n  }\n\n  browserExtension.install();\n}\n\nfunction onUpdateAvailable() {\n  chrome.runtime.reload();\n}\n",
    "/**\n * This module configures Raven for reporting crashes\n * to Sentry.\n *\n * Logging requires the Sentry DSN and Hypothesis\n * version to be provided via the app's settings object.\n */\n\nimport Raven from 'raven-js';\n\n/**\n * Returns the input URL if it is an HTTP URL or the filename part of the URL\n * otherwise.\n *\n * @param {string} url - The script URL associated with an exception stack\n *                       frame.\n */\nfunction convertLocalURLsToFilenames(url) {\n  if (!url) {\n    return url;\n  }\n\n  if (url.match(/https?:/)) {\n    return url;\n  }\n\n  // Strip the query string (which is used as a cache buster)\n  // and extract the filename from the URL\n  return url.replace(/\\?.*/, '').split('/').slice(-1)[0];\n}\n\n/**\n * Return a transformed version of `data` with local URLs replaced\n * with filenames.\n *\n * In environments where the client is served from a local URL,\n * eg. chrome-extension://<ID>/scripts/bundle.js, the script URL\n * and the sourcemap it references will not be accessible to Sentry.\n *\n * Therefore on the client we replace references to such URLs with just\n * the filename part and then as part of the release process, upload both\n * the source file and the source map to Sentry.\n *\n * Using just the filename allows us to upload a single set of source files\n * and sourcemaps for a release though a given release of H might be served\n * from multiple actual URLs (eg. different browser extensions).\n */\nfunction translateSourceURLs(data) {\n  try {\n    var frames = data.exception.values[0].stacktrace.frames;\n    frames.forEach(function (frame) {\n      frame.filename = convertLocalURLsToFilenames(frame.filename);\n    });\n    data.culprit = frames[0].filename;\n  } catch (err) {\n    console.warn('Failed to normalize error stack trace', err, data);\n  }\n  return data;\n}\n\nexport function init(config) {\n  Raven.config(config.dsn, {\n    release: config.release,\n    dataCallback: translateSourceURLs,\n  }).install();\n  installUnhandledPromiseErrorHandler();\n}\n\n/**\n * Report an error to Sentry.\n *\n * @param {Error} error - An error object describing what went wrong\n * @param {string} when - A string describing the context in which\n *                        the error occurred.\n * @param {Object} [context] - A JSON-serializable object containing additional\n *                             information which may be useful when\n *                             investigating the error.\n */\nexport function report(error, when, context) {\n  if (!(error instanceof Error)) {\n    // If the passed object is not an Error, raven-js\n    // will serialize it using toString() which produces unhelpful results\n    // for objects that do not provide their own toString() implementations.\n    //\n    // If the error is a plain object or non-Error subclass with a message\n    // property, such as errors returned by chrome.extension.lastError,\n    // use that instead.\n    if (typeof error === 'object' && error.message) {\n      error = error.message;\n    }\n  }\n\n  var extra = Object.assign({ when: when }, context);\n  Raven.captureException(error, { extra: extra });\n}\n\n/**\n * Installs a handler to catch unhandled rejected promises.\n *\n * For this to work, the browser or the Promise polyfill must support\n * the unhandled promise rejection event (Chrome >= 49). On other browsers,\n * the rejections will simply go unnoticed. Therefore, app code _should_\n * always provide a .catch() handler on the top-most promise chain.\n *\n * See https://github.com/getsentry/raven-js/issues/424\n * and https://www.chromestatus.com/feature/4805872211460096\n *\n * It is possible that future versions of Raven JS may handle these events\n * automatically, in which case this code can simply be removed.\n */\nfunction installUnhandledPromiseErrorHandler() {\n  window.addEventListener('unhandledrejection', function (event) {\n    if (event.reason) {\n      report(event.reason, 'Unhandled Promise rejection');\n    }\n  });\n}\n",
    "/**\n * Validate and normalize the given settings data.\n *\n * @param {Object} settings The settings from the settings.json file.\n */\nfunction normalizeSettings(settings) {\n  // Make sure that apiUrl does not end with a /.\n  if (settings.apiUrl.charAt(settings.apiUrl.length - 1) === '/') {\n    settings.apiUrl = settings.apiUrl.slice(0, -1);\n  }\n  return settings;\n}\n\n/**\n * Returns the configuration object for the Chrome extension\n */\nexport default normalizeSettings(window.EXTENSION_CONFIG);\n",
    "import * as queryString from 'query-string';\n\nimport detectContentType from './detect-content-type';\nimport * as errors from './errors';\nimport * as util from './util';\n\nvar CONTENT_TYPE_HTML = 'HTML';\nvar CONTENT_TYPE_PDF = 'PDF';\n\nfunction toIIFEString(fn) {\n  return '(' + fn.toString() + ')()';\n}\n\n/**\n * Adds a <script> tag containing JSON config data to the page.\n *\n * Note that this function is stringified and injected into the page via a\n * content script, so it cannot reference any external variables.\n */\nfunction addJSONScriptTagFn(name, content) {\n  var scriptTag = document.createElement('script');\n  scriptTag.className = name;\n  scriptTag.textContent = content;\n  scriptTag.type = 'application/json';\n  document.head.appendChild(scriptTag);\n}\n\n/**\n * Extract the value returned by a content script injected via\n * chrome.tabs.executeScript() into the main frame of a page.\n *\n * executeScript() returns an array of results, one per frame which the script\n * was injected into.\n *\n * See https://developer.chrome.com/extensions/tabs#method-executeScript\n *\n * @param {Array<any>?} result\n */\nfunction extractContentScriptResult(result) {\n  if (Array.isArray(result) && result.length > 0) {\n    return result[0];\n  } else if (typeof result === 'object') {\n    // Firefox currently returns an object instead of\n    // an array from executeScript()\n    return result;\n  } else {\n    return null;\n  }\n}\n\n/* The SidebarInjector is used to deploy and remove the Hypothesis sidebar\n * from tabs. It also deals with loading PDF documents into the PDF.js viewer\n * when applicable.\n *\n * chromeTabs - An instance of chrome.tabs.\n * dependencies - An object with additional helper methods.\n *   isAllowedFileSchemeAccess: A function that returns true if the user\n *   can access resources over the file:// protocol. See:\n *   https://developer.chrome.com/extensions/extension#method-isAllowedFileSchemeAccess\n *   extensionURL: A function that receives a path and returns an absolute\n *   url. See: https://developer.chrome.com/extensions/extension#method-getURL\n */\nexport default function SidebarInjector(chromeTabs, dependencies) {\n  dependencies = dependencies || {};\n\n  var isAllowedFileSchemeAccess = dependencies.isAllowedFileSchemeAccess;\n  var extensionURL = dependencies.extensionURL;\n\n  var executeScriptFn = util.promisify(chromeTabs.executeScript);\n\n  var PDFViewerBaseURL = extensionURL('/pdfjs/web/viewer.html');\n\n  if (typeof extensionURL !== 'function') {\n    throw new TypeError('extensionURL must be a function');\n  }\n\n  if (typeof isAllowedFileSchemeAccess !== 'function') {\n    throw new TypeError('isAllowedFileSchemeAccess must be a function');\n  }\n\n  /**\n   * Injects the Hypothesis sidebar into the tab provided.\n   *\n   * @param {Tab} tab - A tab object representing the tab to insert the sidebar\n   *        into.\n   * @param {Object?} config - An object containing configuration info that\n   *        is passed to the app when it loads.\n   *\n   * Returns a promise that will be resolved if the injection succeeded\n   * otherwise it will be rejected with an error.\n   */\n  this.injectIntoTab = function (tab, config) {\n    config = config || {};\n    if (isFileURL(tab.url)) {\n      return injectIntoLocalDocument(tab);\n    } else {\n      return injectIntoRemoteDocument(tab, config);\n    }\n  };\n\n  /* Removes the Hypothesis sidebar from the tab provided.\n   *\n   * tab - A tab object representing the tab to remove the sidebar from.\n   *\n   * Returns a promise that will be resolved if the removal succeeded\n   * otherwise it will be rejected with an error.\n   */\n  this.removeFromTab = function (tab) {\n    if (isPDFViewerURL(tab.url)) {\n      return removeFromPDF(tab);\n    } else {\n      return removeFromHTML(tab);\n    }\n  };\n\n  function getPDFViewerURL(url) {\n    // Encode the original URL but preserve the fragment, so that a\n    // '#annotations' fragment in the original URL will persist and trigger the\n    // sidebar to focus and scroll to that annotation when the PDF viewer loads.\n    var parsedURL = new URL(url);\n    var hash = parsedURL.hash;\n    parsedURL.hash = '';\n    var encodedURL = encodeURIComponent(parsedURL.href);\n    return PDFViewerBaseURL + '?file=' + encodedURL + hash;\n  }\n\n  // returns true if the extension is permitted to inject\n  // a content script into a tab with a given URL.\n  function canInjectScript(url) {\n    var canInject;\n    if (isSupportedURL(url)) {\n      canInject = Promise.resolve(true);\n    } else if (isFileURL(url)) {\n      canInject = util.promisify(isAllowedFileSchemeAccess)();\n    } else {\n      canInject = Promise.resolve(false);\n    }\n    return canInject;\n  }\n\n  /**\n   * Guess the content type of a page from the URL alone.\n   *\n   * This is a fallback for when it is not possible to inject\n   * a content script to determine the type of content in the page.\n   */\n  function guessContentTypeFromURL(url) {\n    if (url.indexOf('.pdf') !== -1) {\n      return CONTENT_TYPE_PDF;\n    } else {\n      return CONTENT_TYPE_HTML;\n    }\n  }\n\n  function detectTabContentType(tab) {\n    if (isPDFViewerURL(tab.url)) {\n      return Promise.resolve(CONTENT_TYPE_PDF);\n    }\n\n    return canInjectScript(tab.url).then(function (canInject) {\n      if (canInject) {\n        return executeScriptFn(tab.id, {\n          code: toIIFEString(detectContentType),\n        }).then(function (frameResults) {\n          var result = extractContentScriptResult(frameResults);\n          if (result) {\n            return result.type;\n          } else {\n            // If the content script threw an exception,\n            // frameResults may be null or undefined.\n            //\n            // In that case, fall back to guessing based on the\n            // tab URL\n            return guessContentTypeFromURL(tab.url);\n          }\n        });\n      } else {\n        // We cannot inject a content script in order to determine the\n        // file type, so fall back to a URL-based mechanism\n        return Promise.resolve(guessContentTypeFromURL(tab.url));\n      }\n    });\n  }\n\n  /**\n   * Returns true if a tab is displaying a PDF using the PDF.js-based\n   * viewer bundled with the extension.\n   */\n  function isPDFViewerURL(url) {\n    return url.indexOf(PDFViewerBaseURL) === 0;\n  }\n\n  function isFileURL(url) {\n    return url.indexOf('file:') === 0;\n  }\n\n  function isSupportedURL(url) {\n    // Injection of content scripts is limited to a small number of protocols,\n    // see https://developer.chrome.com/extensions/match_patterns\n    var parsedURL = new URL(url);\n    var SUPPORTED_PROTOCOLS = ['http:', 'https:', 'ftp:'];\n    return SUPPORTED_PROTOCOLS.some(function (protocol) {\n      return parsedURL.protocol === protocol;\n    });\n  }\n\n  function injectIntoLocalDocument(tab) {\n    return detectTabContentType(tab).then(function (type) {\n      if (type === CONTENT_TYPE_PDF) {\n        return injectIntoLocalPDF(tab);\n      } else {\n        return Promise.reject(\n          new errors.LocalFileError('Local non-PDF files are not supported')\n        );\n      }\n    });\n  }\n\n  function injectIntoRemoteDocument(tab, config) {\n    if (isPDFViewerURL(tab.url)) {\n      return Promise.resolve();\n    }\n\n    if (!isSupportedURL(tab.url)) {\n      // Chrome does not permit extensions to inject content scripts\n      // into (chrome*):// URLs and other custom schemes.\n      //\n      // A common case where this happens is when the user has an\n      // extension installed that provides a custom viewer for PDFs\n      // (or some other format). In some cases we could extract the original\n      // URL and open that in the Hypothesis viewer instead.\n      var protocol = tab.url.split(':')[0];\n      return Promise.reject(\n        new errors.RestrictedProtocolError(\n          'Cannot load Hypothesis into ' + protocol + ' pages'\n        )\n      );\n    }\n\n    return detectTabContentType(tab).then(function (type) {\n      if (type === CONTENT_TYPE_PDF) {\n        return injectIntoPDF(tab);\n      } else {\n        return injectConfig(tab.id, config)\n          .then(function () {\n            return injectIntoHTML(tab);\n          })\n          .then(function (results) {\n            var result = extractContentScriptResult(results);\n            if (\n              result &&\n              typeof result.installedURL === 'string' &&\n              result.installedURL.indexOf(extensionURL('/')) === -1\n            ) {\n              throw new errors.AlreadyInjectedError(\n                'Hypothesis is already injected into this page'\n              );\n            }\n          });\n      }\n    });\n  }\n\n  function injectIntoPDF(tab) {\n    if (isPDFViewerURL(tab.url)) {\n      return Promise.resolve();\n    }\n    var updateFn = util.promisify(chromeTabs.update);\n    return updateFn(tab.id, { url: getPDFViewerURL(tab.url) });\n  }\n\n  function injectIntoLocalPDF(tab) {\n    return new Promise(function (resolve, reject) {\n      isAllowedFileSchemeAccess(function (isAllowed) {\n        if (isAllowed) {\n          resolve(injectIntoPDF(tab));\n        } else {\n          reject(\n            new errors.NoFileAccessError('Local file scheme access denied')\n          );\n        }\n      });\n    });\n  }\n\n  function injectIntoHTML(tab) {\n    return injectScript(tab.id, '/client/build/boot.js');\n  }\n\n  function removeFromPDF(tab) {\n    return new Promise(function (resolve) {\n      var parsedURL = new URL(tab.url);\n      var originalURL = queryString.parse(parsedURL.search).file;\n      if (!originalURL) {\n        throw new Error('Failed to extract original URL from ' + tab.url);\n      }\n      var hash = parsedURL.hash;\n\n      // If the original URL was a direct link, drop the #annotations fragment\n      // as otherwise the Chrome extension will re-activate itself on this tab\n      // when the original URL loads.\n      if (hash.indexOf('#annotations:') === 0) {\n        hash = '';\n      }\n\n      chromeTabs.update(\n        tab.id,\n        {\n          url: decodeURIComponent(originalURL) + hash,\n        },\n        resolve\n      );\n    });\n  }\n\n  function removeFromHTML(tab) {\n    if (!isSupportedURL(tab.url)) {\n      return Promise.resolve();\n    }\n    return injectScript(tab.id, '/unload-client.js');\n  }\n\n  /**\n   * Inject the script from the source file at `path` into the\n   * page currently loaded in the tab at the given ID.\n   */\n  function injectScript(tabId, path) {\n    return executeScriptFn(tabId, { file: path });\n  }\n\n  /**\n   * Inject configuration information for the Hypothesis application\n   * into the page as JSON data via a <meta> tag.\n   *\n   * A <meta> tag is used because that makes it available to JS content\n   * running in isolated worlds.\n   */\n  function injectConfig(tabId, config) {\n    var configStr = JSON.stringify(config).replace(/\"/g, '\\\\\"');\n    var configCode =\n      'var hypothesisConfig = \"' +\n      configStr +\n      '\";\\n' +\n      '(' +\n      addJSONScriptTagFn.toString() +\n      ')' +\n      '(\"js-hypothesis-config\", hypothesisConfig);\\n';\n    return executeScriptFn(tabId, { code: configCode });\n  }\n}\n",
    "import isShallowEqual from 'is-equal-shallow';\n\nimport * as uriInfo from './uri-info';\n\nvar states = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive',\n  ERRORED: 'errored',\n};\n\n/** The default H state for a new browser tab */\nvar DEFAULT_STATE = {\n  /** Whether or not H is active on the page */\n  state: states.INACTIVE,\n  /** The count of annotations on the page visible to the user,\n   * as returned by the badge API\n   */\n  annotationCount: 0,\n  /** Whether or not the H sidebar has been installed onto the page by\n   * the extension\n   */\n  extensionSidebarInstalled: false,\n  /** Whether the tab is loaded and ready for the sidebar to be installed. */\n  ready: false,\n  /** The error for the current tab. */\n  error: undefined,\n};\n\n/** TabState stores the H state for a tab. This state includes:\n *\n * - Whether the extension has been activated on a tab\n * - Whether the sidebar is currently installed on a tab\n * - The count of annotations visible to the user on the URL currently\n *   displayed in the tab.\n *\n * The H state for a tab is updated via the setState() method and\n * retrieved via getState().\n *\n * When the H state for a tab changes, the `onchange()` callback will\n * be triggered with the tab ID and current and previous states.\n *\n * initialState - An Object of tabId/state keys. Used when loading state\n *   from a persisted store such as localStorage. This will be merged with\n *   the default state for a tab.\n * onchange     - A function that recieves onchange(tabId, current).\n */\nexport default function TabState(initialState, onchange) {\n  var self = this;\n  var currentState;\n\n  this.onchange = onchange || null;\n\n  /** Replaces the H state for all tabs with the state data\n   * from `newState`.\n   *\n   * @param newState - A dictionary mapping tab ID to tab state objects.\n   *                   The provided state will be merged with the default\n   *                   state for a tab.\n   */\n  this.load = function (newState) {\n    var newCurrentState = {};\n    Object.keys(newState).forEach(function (tabId) {\n      newCurrentState[tabId] = Object.assign(\n        {},\n        DEFAULT_STATE,\n        newState[tabId]\n      );\n    });\n    currentState = newCurrentState;\n  };\n\n  this.activateTab = function (tabId) {\n    this.setState(tabId, { state: states.ACTIVE });\n  };\n\n  this.deactivateTab = function (tabId) {\n    this.setState(tabId, { state: states.INACTIVE });\n  };\n\n  this.errorTab = function (tabId, error) {\n    this.setState(tabId, {\n      state: states.ERRORED,\n      error: error,\n    });\n  };\n\n  this.clearTab = function (tabId) {\n    this.setState(tabId, null);\n  };\n\n  this.getState = function (tabId) {\n    if (!currentState[tabId]) {\n      return DEFAULT_STATE;\n    }\n    return currentState[tabId];\n  };\n\n  this.annotationCount = function (tabId) {\n    return this.getState(tabId).annotationCount;\n  };\n\n  this.isTabActive = function (tabId) {\n    return this.getState(tabId).state === states.ACTIVE;\n  };\n\n  this.isTabInactive = function (tabId) {\n    return this.getState(tabId).state === states.INACTIVE;\n  };\n\n  this.isTabErrored = function (tabId) {\n    return this.getState(tabId).state === states.ERRORED;\n  };\n\n  /**\n   * Updates the H state for a tab.\n   *\n   * @param tabId - The ID of the tab being updated\n   * @param stateUpdate - A dictionary of {key:value} properties for\n   *                      state properties to update or null if the\n   *                      state should be removed.\n   */\n  this.setState = function (tabId, stateUpdate) {\n    var newState;\n    if (stateUpdate) {\n      newState = Object.assign({}, this.getState(tabId), stateUpdate);\n      if (newState.state !== states.ERRORED) {\n        newState.error = undefined;\n      }\n    }\n\n    if (isShallowEqual(newState, currentState[tabId])) {\n      return;\n    }\n\n    currentState[tabId] = newState;\n\n    if (self.onchange) {\n      self.onchange(tabId, newState);\n    }\n  };\n\n  /**\n   * Query the server for the annotation count for a URL\n   * and update the annotation count for the tab accordingly.\n   *\n   * @method\n   * @param {integer} tabId The id of the tab.\n   * @param {string} tabUrl The URL of the tab.\n   */\n  this.updateAnnotationCount = function (tabId, tabUrl) {\n    var self = this;\n    return uriInfo\n      .query(tabUrl)\n      .then(function (result) {\n        self.setState(tabId, { annotationCount: result.total });\n      })\n      .catch(function (err) {\n        self.setState(tabId, { annotationCount: 0 });\n        console.error(\n          'Failed to fetch annotation count for %s: %s',\n          tabUrl,\n          err\n        );\n      });\n  };\n\n  this.load(initialState || {});\n}\n\nTabState.states = states;\n",
    "/** TabStore is used to persist the state of H browser tabs when\n * the extension is re-installed or updated.\n *\n * Note: This could also be used to persist the state across browser sessions,\n * for that to work however the storage key would need to be changed.\n * The tab ID is currently used but this is valid only for a browser session.\n */\nexport default function TabStore(storage) {\n  var key = 'state';\n  var local;\n\n  this.get = function (tabId) {\n    var value = local[tabId];\n    if (!value) {\n      throw new Error('TabStateStore could not find entry for tab: ' + tabId);\n    }\n    return value;\n  };\n\n  this.set = function (tabId, value) {\n    // copy across only the parts of the tab state that should\n    // be preserved\n    local[tabId] = {\n      state: value.state,\n      annotationCount: value.annotationCount,\n    };\n    storage.setItem(key, JSON.stringify(local));\n  };\n\n  this.unset = function (tabId) {\n    delete local[tabId];\n    storage.setItem(key, JSON.stringify(local));\n  };\n\n  this.all = function () {\n    return local;\n  };\n\n  this.reload = function () {\n    try {\n      local = {};\n      var loaded = JSON.parse(storage.getItem(key));\n      Object.keys(loaded).forEach(function (key) {\n        // ignore tab state saved by earlier versions of\n        // the extension which saved the state as a {key: <state string>}\n        // dict rather than {key: <state object>}\n        if (typeof loaded[key] === 'string') {\n          local[key] = { state: loaded[key] };\n        } else {\n          local[key] = loaded[key];\n        }\n      });\n    } catch (e) {\n      local = null;\n    }\n    local = local || {};\n  };\n\n  this.reload();\n}\n",
    "import settings from './settings';\n\n/** encodeUriQuery encodes a string for use in a query parameter */\nfunction encodeUriQuery(val) {\n  return encodeURIComponent(val).replace(/%20/g, '+');\n}\n\n/**\n * Queries the Hypothesis service that provides\n * statistics about the annotations for a given URL.\n */\nexport function query(uri) {\n  return fetch(settings.apiUrl + '/badge?uri=' + encodeUriQuery(uri), {\n    credentials: 'include',\n  })\n    .then(function (res) {\n      return res.json();\n    })\n    .then(function (data) {\n      if (typeof data.total !== 'number') {\n        throw new Error('Annotation count is not a number');\n      }\n      return data;\n    });\n}\n",
    "function getLastError() {\n  if (typeof chrome !== 'undefined' && chrome.extension) {\n    return chrome.extension.lastError;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Converts an async Chrome API into a function\n * which returns a promise.\n *\n * Usage:\n *   var apiFn = promisify(chrome.someModule.aFunction);\n *   apiFn(arg1, arg2)\n *     .then(function (result) { ...handle success  })\n *     .catch(function (err) { ...handle error })\n *\n *\n * @param fn A Chrome API function whose last argument is a callback\n *           which is invoked with the result of the query. When this callback\n *           is invoked, the promise is rejected if chrome.extension.lastError\n *           is set or resolved with the first argument to the callback otherwise.\n */\nexport function promisify(fn) {\n  return function () {\n    var args = [].slice.call(arguments);\n    var result = new Promise(function (resolve, reject) {\n      fn.apply(\n        this,\n        args.concat(function (result) {\n          var lastError = getLastError();\n          if (lastError) {\n            reject(lastError);\n          } else {\n            resolve(result);\n          }\n        })\n      );\n    });\n    return result;\n  };\n}\n"
  ]
}